(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{17:function(t,e,n){},19:function(t,e,n){},21:function(t,e,n){},23:function(t,e,n){"use strict";n.r(e);var o=n(3),i=n.n(o),r=n(7),a=n.n(r),l=(n(17),n(19),n(4)),s=n(2),c=n(0),d=n(1),u=function(){function t(){Object(c.a)(this,t)}return Object(d.a)(t,null,[{key:"isWebGLAvailable",value:function(){try{var t=document.createElement("canvas");return!(!window.WebGLRenderingContext||!t.getContext("webgl")&&!t.getContext("experimental-webgl"))}catch(e){return!1}}},{key:"isWebGL2Available",value:function(){try{var t=document.createElement("canvas");return!(!window.WebGL2RenderingContext||!t.getContext("webgl2"))}catch(e){return!1}}},{key:"getWebGLErrorMessage",value:function(){return this.getErrorMessage(1)}},{key:"getWebGL2ErrorMessage",value:function(){return this.getErrorMessage(2)}},{key:"getErrorMessage",value:function(t){var e={1:window.WebGLRenderingContext,2:window.WebGL2RenderingContext},n='Your $0 does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">$1</a>',o=document.createElement("div");return o.id="webglmessage",o.style.fontFamily="monospace",o.style.fontSize="13px",o.style.fontWeight="normal",o.style.textAlign="center",o.style.background="#fff",o.style.color="#000",o.style.padding="1.5em",o.style.width="400px",o.style.margin="5em auto 0",n=(n=e[t]?n.replace("$0","graphics card"):n.replace("$0","browser")).replace("$1",{1:"WebGL",2:"WebGL 2"}[t]),o.innerHTML=n,o}}]),t}(),f=n(5),v={uniforms:{textureWidth:{value:1},textureHeight:{value:1},focalDepth:{value:1},focalLength:{value:24},fstop:{value:.9},tColor:{value:null},tDepth:{value:null},maxblur:{value:1},showFocus:{value:0},manualdof:{value:0},vignetting:{value:0},depthblur:{value:0},threshold:{value:.5},gain:{value:2},bias:{value:.5},fringe:{value:.7},znear:{value:.1},zfar:{value:100},noise:{value:1},dithering:{value:1e-4},pentagon:{value:0},shaderFocus:{value:1},focusCoords:{value:new s.s}},vertexShader:"\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",fragmentShader:"\n\n\t\t#include <common>\n\n\t\tvarying vec2 vUv;\n\n\t\tuniform sampler2D tColor;\n\t\tuniform sampler2D tDepth;\n\t\tuniform float textureWidth;\n\t\tuniform float textureHeight;\n\n\t\tuniform float focalDepth;  //focal distance value in meters, but you may use autofocus option below\n\t\tuniform float focalLength; //focal length in mm\n\t\tuniform float fstop; //f-stop value\n\t\tuniform bool showFocus; //show debug focus point and focal range (red = focal point, green = focal range)\n\n\t\t/*\n\t\tmake sure that these two values are the same for your camera, otherwise distances will be wrong.\n\t\t*/\n\n\t\tuniform float znear; // camera clipping start\n\t\tuniform float zfar; // camera clipping end\n\n\t\t//------------------------------------------\n\t\t//user variables\n\n\t\tconst int samples = SAMPLES; //samples on the first ring\n\t\tconst int rings = RINGS; //ring count\n\n\t\tconst int maxringsamples = rings * samples;\n\n\t\tuniform bool manualdof; // manual dof calculation\n\t\tfloat ndofstart = 1.0; // near dof blur start\n\t\tfloat ndofdist = 2.0; // near dof blur falloff distance\n\t\tfloat fdofstart = 1.0; // far dof blur start\n\t\tfloat fdofdist = 3.0; // far dof blur falloff distance\n\n\t\tfloat CoC = 0.03; //circle of confusion size in mm (35mm film = 0.03mm)\n\n\t\tuniform bool vignetting; // use optical lens vignetting\n\n\t\tfloat vignout = 1.3; // vignetting outer border\n\t\tfloat vignin = 0.0; // vignetting inner border\n\t\tfloat vignfade = 22.0; // f-stops till vignete fades\n\n\t\tuniform bool shaderFocus;\n\t\t// disable if you use external focalDepth value\n\n\t\tuniform vec2 focusCoords;\n\t\t// autofocus point on screen (0.0,0.0 - left lower corner, 1.0,1.0 - upper right)\n\t\t// if center of screen use vec2(0.5, 0.5);\n\n\t\tuniform float maxblur;\n\t\t//clamp value of max blur (0.0 = no blur, 1.0 default)\n\n\t\tuniform float threshold; // highlight threshold;\n\t\tuniform float gain; // highlight gain;\n\n\t\tuniform float bias; // bokeh edge bias\n\t\tuniform float fringe; // bokeh chromatic aberration / fringing\n\n\t\tuniform bool noise; //use noise instead of pattern for sample dithering\n\n\t\tuniform float dithering;\n\n\t\tuniform bool depthblur; // blur the depth buffer\n\t\tfloat dbsize = 1.25; // depth blur size\n\n\t\t/*\n\t\tnext part is experimental\n\t\tnot looking good with small sample and ring count\n\t\tlooks okay starting from samples = 4, rings = 4\n\t\t*/\n\n\t\tuniform bool pentagon; //use pentagon as bokeh shape?\n\t\tfloat feather = 0.4; //pentagon shape feather\n\n\t\t//------------------------------------------\n\n\t\tfloat penta(vec2 coords) {\n\t\t\t//pentagonal shape\n\t\t\tfloat scale = float(rings) - 1.3;\n\t\t\tvec4  HS0 = vec4( 1.0,         0.0,         0.0,  1.0);\n\t\t\tvec4  HS1 = vec4( 0.309016994, 0.951056516, 0.0,  1.0);\n\t\t\tvec4  HS2 = vec4(-0.809016994, 0.587785252, 0.0,  1.0);\n\t\t\tvec4  HS3 = vec4(-0.809016994,-0.587785252, 0.0,  1.0);\n\t\t\tvec4  HS4 = vec4( 0.309016994,-0.951056516, 0.0,  1.0);\n\t\t\tvec4  HS5 = vec4( 0.0        ,0.0         , 1.0,  1.0);\n\n\t\t\tvec4  one = vec4( 1.0 );\n\n\t\t\tvec4 P = vec4((coords),vec2(scale, scale));\n\n\t\t\tvec4 dist = vec4(0.0);\n\t\t\tfloat inorout = -4.0;\n\n\t\t\tdist.x = dot( P, HS0 );\n\t\t\tdist.y = dot( P, HS1 );\n\t\t\tdist.z = dot( P, HS2 );\n\t\t\tdist.w = dot( P, HS3 );\n\n\t\t\tdist = smoothstep( -feather, feather, dist );\n\n\t\t\tinorout += dot( dist, one );\n\n\t\t\tdist.x = dot( P, HS4 );\n\t\t\tdist.y = HS5.w - abs( P.z );\n\n\t\t\tdist = smoothstep( -feather, feather, dist );\n\t\t\tinorout += dist.x;\n\n\t\t\treturn clamp( inorout, 0.0, 1.0 );\n\t\t}\n\n\t\tfloat bdepth(vec2 coords) {\n\t\t\t// Depth buffer blur\n\t\t\tfloat d = 0.0;\n\t\t\tfloat kernel[9];\n\t\t\tvec2 offset[9];\n\n\t\t\tvec2 wh = vec2(1.0/textureWidth,1.0/textureHeight) * dbsize;\n\n\t\t\toffset[0] = vec2(-wh.x,-wh.y);\n\t\t\toffset[1] = vec2( 0.0, -wh.y);\n\t\t\toffset[2] = vec2( wh.x -wh.y);\n\n\t\t\toffset[3] = vec2(-wh.x,  0.0);\n\t\t\toffset[4] = vec2( 0.0,   0.0);\n\t\t\toffset[5] = vec2( wh.x,  0.0);\n\n\t\t\toffset[6] = vec2(-wh.x, wh.y);\n\t\t\toffset[7] = vec2( 0.0,  wh.y);\n\t\t\toffset[8] = vec2( wh.x, wh.y);\n\n\t\t\tkernel[0] = 1.0/16.0;   kernel[1] = 2.0/16.0;   kernel[2] = 1.0/16.0;\n\t\t\tkernel[3] = 2.0/16.0;   kernel[4] = 4.0/16.0;   kernel[5] = 2.0/16.0;\n\t\t\tkernel[6] = 1.0/16.0;   kernel[7] = 2.0/16.0;   kernel[8] = 1.0/16.0;\n\n\n\t\t\tfor( int i=0; i<9; i++ ) {\n\t\t\t\tfloat tmp = texture2D(tDepth, coords + offset[i]).r;\n\t\t\t\td += tmp * kernel[i];\n\t\t\t}\n\n\t\t\treturn d;\n\t\t}\n\n\n\t\tvec3 color(vec2 coords,float blur) {\n\t\t\t//processing the sample\n\n\t\t\tvec3 col = vec3(0.0);\n\t\t\tvec2 texel = vec2(1.0/textureWidth,1.0/textureHeight);\n\n\t\t\tcol.r = texture2D(tColor,coords + vec2(0.0,1.0)*texel*fringe*blur).r;\n\t\t\tcol.g = texture2D(tColor,coords + vec2(-0.866,-0.5)*texel*fringe*blur).g;\n\t\t\tcol.b = texture2D(tColor,coords + vec2(0.866,-0.5)*texel*fringe*blur).b;\n\n\t\t\tvec3 lumcoeff = vec3(0.299,0.587,0.114);\n\t\t\tfloat lum = dot(col.rgb, lumcoeff);\n\t\t\tfloat thresh = max((lum-threshold)*gain, 0.0);\n\t\t\treturn col+mix(vec3(0.0),col,thresh*blur);\n\t\t}\n\n\t\tvec3 debugFocus(vec3 col, float blur, float depth) {\n\t\t\tfloat edge = 0.002*depth; //distance based edge smoothing\n\t\t\tfloat m = clamp(smoothstep(0.0,edge,blur),0.0,1.0);\n\t\t\tfloat e = clamp(smoothstep(1.0-edge,1.0,blur),0.0,1.0);\n\n\t\t\tcol = mix(col,vec3(1.0,0.5,0.0),(1.0-m)*0.6);\n\t\t\tcol = mix(col,vec3(0.0,0.5,1.0),((1.0-e)-(1.0-m))*0.2);\n\n\t\t\treturn col;\n\t\t}\n\n\t\tfloat linearize(float depth) {\n\t\t\treturn -zfar * znear / (depth * (zfar - znear) - zfar);\n\t\t}\n\n\t\tfloat vignette() {\n\t\t\tfloat dist = distance(vUv.xy, vec2(0.5,0.5));\n\t\t\tdist = smoothstep(vignout+(fstop/vignfade), vignin+(fstop/vignfade), dist);\n\t\t\treturn clamp(dist,0.0,1.0);\n\t\t}\n\n\t\tfloat gather(float i, float j, int ringsamples, inout vec3 col, float w, float h, float blur) {\n\t\t\tfloat rings2 = float(rings);\n\t\t\tfloat step = PI*2.0 / float(ringsamples);\n\t\t\tfloat pw = cos(j*step)*i;\n\t\t\tfloat ph = sin(j*step)*i;\n\t\t\tfloat p = 1.0;\n\t\t\tif (pentagon) {\n\t\t\t\tp = penta(vec2(pw,ph));\n\t\t\t}\n\t\t\tcol += color(vUv.xy + vec2(pw*w,ph*h), blur) * mix(1.0, i/rings2, bias) * p;\n\t\t\treturn 1.0 * mix(1.0, i /rings2, bias) * p;\n\t\t}\n\n\t\tvoid main() {\n\t\t\t//scene depth calculation\n\n\t\t\tfloat depth = linearize(texture2D(tDepth,vUv.xy).x);\n\n\t\t\t// Blur depth?\n\t\t\tif ( depthblur ) {\n\t\t\t\tdepth = linearize(bdepth(vUv.xy));\n\t\t\t}\n\n\t\t\t//focal plane calculation\n\n\t\t\tfloat fDepth = focalDepth;\n\n\t\t\tif (shaderFocus) {\n\n\t\t\t\tfDepth = linearize(texture2D(tDepth,focusCoords).x);\n\n\t\t\t}\n\n\t\t\t// dof blur factor calculation\n\n\t\t\tfloat blur = 0.0;\n\n\t\t\tif (manualdof) {\n\t\t\t\tfloat a = depth-fDepth; // Focal plane\n\t\t\t\tfloat b = (a-fdofstart)/fdofdist; // Far DoF\n\t\t\t\tfloat c = (-a-ndofstart)/ndofdist; // Near Dof\n\t\t\t\tblur = (a>0.0) ? b : c;\n\t\t\t} else {\n\t\t\t\tfloat f = focalLength; // focal length in mm\n\t\t\t\tfloat d = fDepth*1000.0; // focal plane in mm\n\t\t\t\tfloat o = depth*1000.0; // depth in mm\n\n\t\t\t\tfloat a = (o*f)/(o-f);\n\t\t\t\tfloat b = (d*f)/(d-f);\n\t\t\t\tfloat c = (d-f)/(d*fstop*CoC);\n\n\t\t\t\tblur = abs(a-b)*c;\n\t\t\t}\n\n\t\t\tblur = clamp(blur,0.0,1.0);\n\n\t\t\t// calculation of pattern for dithering\n\n\t\t\tvec2 noise = vec2(rand(vUv.xy), rand( vUv.xy + vec2( 0.4, 0.6 ) ) )*dithering*blur;\n\n\t\t\t// getting blur x and y step factor\n\n\t\t\tfloat w = (1.0/textureWidth)*blur*maxblur+noise.x;\n\t\t\tfloat h = (1.0/textureHeight)*blur*maxblur+noise.y;\n\n\t\t\t// calculation of final color\n\n\t\t\tvec3 col = vec3(0.0);\n\n\t\t\tif(blur < 0.05) {\n\t\t\t\t//some optimization thingy\n\t\t\t\tcol = texture2D(tColor, vUv.xy).rgb;\n\t\t\t} else {\n\t\t\t\tcol = texture2D(tColor, vUv.xy).rgb;\n\t\t\t\tfloat s = 1.0;\n\t\t\t\tint ringsamples;\n\n\t\t\t\tfor (int i = 1; i <= rings; i++) {\n\t\t\t\t\t/*unboxstart*/\n\t\t\t\t\tringsamples = i * samples;\n\n\t\t\t\t\tfor (int j = 0 ; j < maxringsamples ; j++) {\n\t\t\t\t\t\tif (j >= ringsamples) break;\n\t\t\t\t\t\ts += gather(float(i), float(j), ringsamples, col, w, h, blur);\n\t\t\t\t\t}\n\t\t\t\t\t/*unboxend*/\n\t\t\t\t}\n\n\t\t\t\tcol /= s; //divide by sample count\n\t\t\t}\n\n\t\t\tif (showFocus) {\n\t\t\t\tcol = debugFocus(col, blur, depth);\n\t\t\t}\n\n\t\t\tif (vignetting) {\n\t\t\t\tcol *= vignette();\n\t\t\t}\n\n\t\t\tgl_FragColor.rgb = col;\n\t\t\tgl_FragColor.a = 1.0;\n\t\t}"},m={uniforms:{mNear:{value:1},mFar:{value:1e3}},vertexShader:"\n\n\t\tvarying float vViewZDepth;\n\n\t\tvoid main() {\n\n\t\t\t#include <begin_vertex>\n\t\t\t#include <project_vertex>\n\n\t\t\tvViewZDepth = - mvPosition.z;\n\n\t\t}",fragmentShader:"\n\n\t\tuniform float mNear;\n\t\tuniform float mFar;\n\n\t\tvarying float vViewZDepth;\n\n\t\tvoid main() {\n\n\t\t\tfloat color = 1.0 - smoothstep( mNear, mFar, vViewZDepth );\n\t\t\tgl_FragColor = vec4( vec3( color ), 1.0 );\n\n\t\t}"},p=function(t,e,n,o,i){var r=!1,a=!1,l={},c={enabled:!0},d={x:0,y:0},u=(new s.m,m);(l=new s.o({uniforms:u.uniforms,vertexShader:u.vertexShader,fragmentShader:u.fragmentShader})).uniforms.mNear.value=n.near,l.uniforms.mFar.value=n.far,window.addEventListener("resize",function(){n.aspect=window.innerWidth/window.innerHeight,n.updateProjectionMatrix(),c.rtTextureDepth.setSize(window.innerWidth,window.innerHeight),c.rtTextureColor.setSize(window.innerWidth,window.innerHeight),c.bokeh_uniforms.textureWidth.value=window.innerWidth,c.bokeh_uniforms.textureHeight.value=window.innerHeight,e.setSize(window.innerWidth,window.innerHeight)}),t.background=new s.c("rgb(20,60,100)"),c=g(c,{rings:4,samples:1});var v=0,p=new s.q(i?4:6,8,18),w=new s.i({color:"rgb(70,180,255)",emissive:"rgb(0,0,0)",specular:"rgb(255,220,0)",shininess:30,reflectivity:1,refractionRatio:.98}),b=new s.h(p,w);b.position.set(0,0,400),t.add(b);i?document.addEventListener("touchmove",function(t){if(t.preventDefault(),!a&&!r){d.x=t.touches[0].clientX/window.innerWidth*2-1,d.y=-t.touches[0].clientY/window.innerHeight*2+1;var e=new s.t(d.x,d.y,.5);e.unproject(n);var o=e.sub(n.position).normalize(),i=-(n.position.z-400)/o.z,l=n.position.clone().add(o.multiplyScalar(i));b.position.copy(l)}},!1):document.addEventListener("mousemove",function(t){if(t.preventDefault(),!a&&!r){d.x=t.clientX/window.innerWidth*2-1,d.y=-t.clientY/window.innerHeight*2+1;var e=new s.t(d.x,d.y,.5);e.unproject(n);var o=e.sub(n.position).normalize(),i=-(n.position.z-400)/o.z,l=n.position.clone().add(o.multiplyScalar(i));b.position.copy(l)}},!1);var x=document.getElementById("timerBigLineAni"),y=document.getElementById("timerSmallLineAni"),S=new s.b,D=0,k=50,C="Left: ".concat(50..toString()),W=document.getElementById("timerDiv"),E=document.getElementById("instructionsContainer"),H=new s.i({color:"rgb(175,130,85)",emissive:"rgb(175,130,85)",specular:"rgb(50,50,50)",shininess:0,reflectivity:0,refractionRatio:0});H.opacity=.1;var z=new s.p(400,15,15),L=new s.h(z,H);L.position.set(500,300,0),L.scale.z=.1;var P=new s.i({color:"rgb(20,60,100)",emissive:"rgb(0,0,0)",specular:"rgb(255,230,50)",shininess:2,reflectivity:.1,refractionRatio:.1}),M=new s.p(175,10,10),F=new s.i({color:"rgb(30,80,150)",emissive:"rgb(0,0,0)",specular:"rgb(200,180,50)",shininess:1,reflectivity:.1,refractionRatio:.1}),_=[],j=new s.d(50,150,6,3);_=function(){for(var t=0;t<35;t++){var e=new s.h(j,F);e.position.set(t*h(70,140)-2e3,30*Math.random()-150,200),_.push(e)}return _}();var B=new s.h(M,P);B.position.set(-300,-175,100),B.scale.set(1.2,1.5,.4);var I=new s.h(M,P);I.position.set(0,-250,100),I.scale.set(1.2,1.5,.4);var T=new s.h(M,P);T.position.set(600,-175,100),T.scale.set(1.2,1.5,.4);var R=new s.h(M,P);R.position.set(900,-250,100),R.scale.set(1.2,1.5,.4),t.add.apply(t,[B,I,T,R].concat(Object(f.a)(_),[L]));var G=1,U=new s.a(9,9,9,1,1,1);U.computeBoundingBox();var A,N=new s.o((A=U,{uniforms:{color1:{value:new s.c("rgb(175,130,85)")},color2:{value:new s.c("rgb(255,240,230)")},bboxMin:{value:A.boundingBox?A.boundingBox.min:new s.s(0,0)},bboxMax:{value:A.boundingBox?A.boundingBox.max:new s.s(0,0)}},vertexShader:"\n    \n      varying vec2 vUv;\n  \n      void main() {\n              vUv = uv;\n              gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\n      }\n    ",fragmentShader:"\n        #define PI 3.1415926\n      #define TWO_PI PI*2.\n          \n      uniform vec3 color1;\n      uniform vec3 color2;\n    \n      varying vec2 vUv;\n      \n      void main() {\n        \n        vec2 uv = vUv * 2. - 1.;\n        \n        float a = atan(uv.x,uv.y)+PI;\n        float r = TWO_PI/4.;\n        float d = cos(floor(.5+a/r)*r-a)*length(uv);\n        \n        gl_FragColor = vec4(mix(color1, color2, d-0.5), 1.0);\n      }\n    "})),O=new s.h(U,N);O.position.set(2350,0,400),t.add(O);var q=function(){c.enabled?(e.clear(),e.setRenderTarget(c.rtTextureColor),e.clear(),e.render(t,n),t.overrideMaterial=l,e.setRenderTarget(c.rtTextureDepth),e.clear(),e.render(t,n),t.overrideMaterial=null,e.setRenderTarget(null),e.render(c.scene,c.camera),e.render(t,n)):(t.overrideMaterial=null,e.setRenderTarget(null),e.render(t,n))};!function t(){if(!a&&!r){D=S.getDelta(),k-=1*D,C="Left: ".concat(Math.floor(k)),W&&(W.innerHTML=C),console.log(b.position.y),k<=45&&E&&!E.classList.contains("exitDom")&&E.classList.add("exitDom"),k<=44&&E&&E.remove(),B.position.x-=.04,I.position.x-=.04,T.position.x-=.04,R.position.x-=.04;for(var e=0;e<35;e++)_[e].position.x-=6,_[e].position.x<=-2e3&&(_[e].position.x=2e3);x&&y&&Math.floor(k)<=0&&(r=!0,x.style.animationPlayState="paused",y.style.animationPlayState="paused")}if(G=Math.sign(b.position.y),O.rotateZ(.05),O.position.x-=3,O.position.y+=.2*G,(O.position.y===b.position.y||(G>=0?O.position.y>b.position.y:O.position.y<b.position.y))&&(O.position.y=b.position.y),O.position.x<=-250&&(O.position.x=h(150,750)),x&&y&&W&&b.position.x-3<O.position.x&&b.position.x+3>O.position.x&&b.position.y-3<O.position.y&&b.position.y+3>O.position.y&&(a=!0,console.log("COLLISION"),x.style.animationPlayState="paused",y.style.animationPlayState="paused",W.classList.add("blink")),a){v+=.1,b.position.y-=.1+v,B.position.x-=.008,I.position.x-=.008,T.position.x-=.008,R.position.x-=.008;for(var n=0;n<35;n++)_[n].position.x-=.2,_[n].position.x<=-2e3&&(_[n].position.x=2e3)}else if(r){v+=.1,b.position.x+=.1+v,B.position.x-=.008,I.position.x-=.008,T.position.x-=.008,R.position.x-=.008;for(var o=0;o<35;o++)_[o].position.x-=.2,_[o].position.x<=-2e3&&(_[o].position.x=2e3)}requestAnimationFrame(t),q()}()},h=function(t,e){return Math.random()*(e-t)+t},g=function(t,e){t.scene=new s.n,t.camera=new s.j(window.innerWidth/-2,window.innerWidth/2,window.innerHeight/2,window.innerHeight/-2,-1e4,1e4),t.camera.position.z=100,t.scene.add(t.camera),t.rtTextureDepth=new s.u(window.innerWidth,window.innerHeight),t.rtTextureColor=new s.u(window.innerWidth,window.innerHeight);var n=v;return t.bokeh_uniforms=s.r.clone(n.uniforms),t.bokeh_uniforms.tColor.value=t.rtTextureColor.texture,t.bokeh_uniforms.tDepth.value=t.rtTextureDepth.texture,t.bokeh_uniforms.textureWidth.value=window.innerWidth,t.bokeh_uniforms.textureHeight.value=window.innerHeight,t.materialBokeh=new s.o({uniforms:t.bokeh_uniforms,vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,defines:{RINGS:e.rings,SAMPLES:e.samples}}),t.quad=new s.h(new s.l(window.innerWidth,window.innerHeight),t.materialBokeh),t.quad.position.z=-500,t.scene.add(t.quad),t},w=(n(21),function(){var t=i.a.useState(2),e=Object(l.a)(t,2),n=e[0],o=(e[1],i.a.useState(!1)),r=Object(l.a)(o,2),a=r[0],c=r[1];return i.a.useEffect(function(){if(u.isWebGLAvailable()){var t=new s.v({antialias:!1});if(t.setSize(window.innerWidth,window.innerHeight),t.setPixelRatio(window.devicePixelRatio/n),t.autoClear=!1,window.innerHeight>window.innerWidth&&!a?c(!0):window.innerHeight<=window.innerWidth&&a&&c(!1),t.domElement.id="dom",t.domElement.className="position-fixed",!1===document.body.contains(document.getElementById("dom")))document.body.append(t.domElement);else{var e=document.getElementById("dom");null!==e&&(document.body.removeChild(e),document.body.append(t.domElement))}var o=new s.n,i=new s.k(70,window.innerWidth/window.innerHeight,1,3e3);i.position.set(0,0,450),function(t){var e=new s.e("rgb(255,150,80)",1);e.position.set(500,300,-500),e.rotateX(50),t.add(e);new s.f(e);var n=new s.g(16777215,2302755,1);t.add(n)}(o),p(o,t,i,0,a)}else{var r=u.getWebGLErrorMessage();document.body.appendChild(r)}}),i.a.createElement("div",{"data-testid":"canvas",id:"canvas"},i.a.createElement("div",{id:"timerContainer"},i.a.createElement("div",{id:"timerCircleAni"},i.a.createElement("div",{id:"timerBigLineAni"}),i.a.createElement("div",{id:"timerSmallLineAni"})),i.a.createElement("div",{id:"timerDiv"})),i.a.createElement("div",{id:"instructionsContainer"},i.a.createElement("div",{id:"instructionsText"},"Avoid the Squares!")))});var b=function(){return i.a.createElement("div",{className:"App"},i.a.createElement(w,null))},x=function(t){t&&t instanceof Function&&n.e(1).then(n.bind(null,24)).then(function(e){var n=e.getCLS,o=e.getFID,i=e.getFCP,r=e.getLCP,a=e.getTTFB;n(t),o(t),i(t),r(t),a(t)})};a.a.createRoot(document.getElementById("root")).render(i.a.createElement(i.a.StrictMode,null,i.a.createElement(b,null))),x()},8:function(t,e,n){t.exports=n(23)}},[[8,3,2]]]);
//# sourceMappingURL=main.4568a5ee.chunk.js.map