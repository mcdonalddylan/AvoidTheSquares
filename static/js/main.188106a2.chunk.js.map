{"version":3,"sources":["utils/webGLUtils/webGLUtils.js","utils/guiUtils/guiUtils.js","utils/squareGameUtils/squareGameUtils.ts","components/SquareGameContainer/SquareGameContainer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["WEBGL","canvas","document","createElement","window","WebGLRenderingContext","getContext","e","WebGL2RenderingContext","this","getErrorMessage","version","contexts","1","2","message","element","id","style","fontFamily","fontSize","fontWeight","textAlign","background","color","padding","width","margin","replace","innerHTML","bokehChanger","bokehPass","paramName","paramsValue","uniforms","value","randomNumberRange","min","max","Math","random","randomLoseMessage","floor","randomWinMessage","SquareGameContainer","_React$useState","React","useState","_React$useState2","Object","slicedToArray","quality","setQuality","useEffect","isWebGLAvailable","renderer","THREE","antialias","alpha","setSize","innerWidth","innerHeight","setPixelRatio","devicePixelRatio","autoClear","clear","isMobileAspectRatio","console","log","domElement","className","body","contains","getElementById","append","dom","removeChild","scene","camera","position","set","dirLight","rotateX","add","hemiLight","setupSquareGameLights","isHighQuality","levelWin","levelLose","mouse","x","y","addEventListener","aspect","updateProjectionMatrix","params","focus","aperature","maxBlur","BokehPass","aperture","maxblur","composer","EffectComposer","basicRenderPass","RenderPass","addPass","bloomPass","UnrealBloomPass","vignettePass","ShaderPass","VignetteShader","outputPass","OutputPass","gui","GUI","onChange","close","playerAcceleration","playerGeo","playerMat","emissive","specular","shininess","reflectivity","refractionRatio","playerMesh","geometry","computeBoundingSphere","scale","z","playerBoundingSphere","event","preventDefault","touches","clientX","clientY","vector","unproject","dir","sub","normalize","distance","pos","clone","multiplyScalar","copy","winLoseLevelDiv","bigHand","littleHand","clock","delta","time","timeText","concat","toString","timerDiv","instructionsDiv","moonMat","moonXPos","opacity","moonGeo","moonMesh","hillMat","hillGeo","treeMat","treeMeshArray","treeGeo","i","tempTreeMesh","push","generateTrees","hill1Mesh","hill2Mesh","hill3Mesh","hill4Mesh","apply","toConsumableArray","enemyDirection","enemySpeed","enemyGeo","computeBoundingBox","enemyMat","enemyMesh","enemyBoundingBox","Vector3","setFromObject","enemyMatTween","Tween","material","to","repeat","Infinity","yoyo","easing","Easing","Quadratic","InOut","start","requestAnimationFrame","animate","aniTime","boundingSphere","intersectsSphere","animationPlayState","classList","getDelta","remove","sign","rotateZ","boundingBox","applyMatrix4","matrixWorld","update","render","squareGameFunctionality","warning","getWebGLErrorMessage","appendChild","react_default","a","data-testid","onClick","App","SquareGameContainer_SquareGameContainer_SquareGameContainer","key","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","StrictMode","src_App"],"mappings":"kRAEMA,kHAIJ,IAEC,IAAMC,EAASC,SAASC,cAAe,UACvC,SAAYC,OAAOC,wBAA2BJ,EAAOK,WAAY,WAAaL,EAAOK,WAAY,uBAEhG,MAAQC,GAET,OAAO,+CAQR,IAEC,IAAMN,EAASC,SAASC,cAAe,UACvC,SAAYC,OAAOI,yBAA0BP,EAAOK,WAAY,WAE/D,MAAQC,GAET,OAAO,kDAQR,OAAOE,KAAKC,gBAAiB,mDAM7B,OAAOD,KAAKC,gBAAiB,2CAINC,GAEvB,IAKMC,EAAW,CAChBC,EAAGT,OAAOC,sBACVS,EAAGV,OAAOI,wBAGPO,EAAU,oIAERC,EAAUd,SAASC,cAAe,OA0BxC,OAzBAa,EAAQC,GAAK,eACbD,EAAQE,MAAMC,WAAa,YAC3BH,EAAQE,MAAME,SAAW,OACzBJ,EAAQE,MAAMG,WAAa,SAC3BL,EAAQE,MAAMI,UAAY,SAC1BN,EAAQE,MAAMK,WAAa,OAC3BP,EAAQE,MAAMM,MAAQ,OACtBR,EAAQE,MAAMO,QAAU,QACxBT,EAAQE,MAAMQ,MAAQ,QACtBV,EAAQE,MAAMS,OAAS,aAYvBZ,GARCA,EAFIH,EAAUD,GAEJI,EAAQa,QAAS,KAAM,iBAIvBb,EAAQa,QAAS,KAAM,YAIhBA,QAAS,KAlCb,CACbf,EAAG,QACHC,EAAG,WAgCoCH,IAExCK,EAAQa,UAAYd,EAEbC,2FCtFIc,EAAe,SAACC,EAAWC,EAAWC,GAC/CF,EAAUG,SAASF,GAAWG,MAAQF,GCoYpCG,EAAoB,SAACC,EAAaC,GACtC,OAAOC,KAAKC,UAAYF,EAAMD,GAAOA,GAGjCI,EAAoB,WAQxB,MANqB,CACnB,qDACA,0BACA,mCACA,gDALgBF,KAAKG,MAAMN,EAAkB,EAAE,MAU7CO,EAAmB,WAQvB,MANoB,CAClB,uDACA,kDACA,mCACA,kDALgBJ,KAAKG,MAAMN,EAAkB,EAAE,MC/YtCQ,SAAsB,WAAoB,IAAAC,EAErBC,IAAMC,SAAiB,GAFFC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAE5CM,EAF4CH,EAAA,GAEnCI,EAFmCJ,EAAA,GA0DnD,OA9CAF,IAAMO,UAAU,WAEZ,GAAKrD,EAAMsD,mBAAqB,CAG5B,IAAIC,EAAW,IAAIC,IAAoB,CAAEC,WAAW,EAAOC,OAAO,IAClEH,EAASI,QAASvD,OAAOwD,WAAYxD,OAAOyD,aAC5CN,EAASO,cAAe1D,OAAO2D,iBAAiBZ,GAChDI,EAASS,WAAY,EACrBT,EAASU,QAET,IAAIC,GAAsB,EAS1B,GARAC,QAAQC,IAAI,kBAAmBhE,OAAOyD,aACtCM,QAAQC,IAAI,iBAAkBhE,OAAOwD,YAClCxD,OAAOyD,YAAczD,OAAOwD,aAC3BM,GAAsB,GAG1BX,EAASc,WAAWpD,GAAK,MACzBsC,EAASc,WAAWC,UAAY,kBACmC,IAA/DpE,SAASqE,KAAKC,SAAUtE,SAASuE,eAAgB,QACjDvE,SAASqE,KAAKG,OAAQnB,EAASc,gBAC5B,CACH,IAAMM,EAAMzE,SAASuE,eAAe,OACzB,OAARE,IACCzE,SAASqE,KAAKK,YAAaD,GAC3BzE,SAASqE,KAAKG,OAAQnB,EAASc,aAKvC,IAAIQ,EAAQ,IAAIrB,IACZsB,EAAS,IAAItB,IAAwB,GAAIpD,OAAOwD,WAAaxD,OAAOyD,YAAa,EAAG,KACxFiB,EAAOC,SAASC,IAAI,EAAG,EAAG,GDtCD,SAAEH,GACnC,IAAII,EAAW,IAAIzB,IAAuB,kBAAmB,GAC7DyB,EAASF,SAASC,IAAK,IAAK,KAAM,KAClCC,EAASC,QAAQ,IACjBL,EAAMM,IAAKF,GAGU,IAAIzB,IAA8ByB,GAAvD,IAGIG,EAAY,IAAI5B,IAAsB,SAAU,QAAU,GAC9DqB,EAAMM,IAAKC,GC8BHC,CAAuBR,GD3BI,SACnCA,EACAtB,EACAuB,EACA3B,EACAe,GAEE,IAAMoB,EAA4B,IAAZnC,EAElBoC,GAAW,EACXC,GAAY,EAEZC,EAAQ,CAACC,EAAG,EAAGC,EAAG,GAGtBvF,OAAOwF,iBAAkB,SACzB,WAEFd,EAAOe,OAASzF,OAAOwD,WAAaxD,OAAOyD,YAC3CiB,EAAOgB,yBAEPvC,EAASI,QAASvD,OAAOwD,WAAYxD,OAAOyD,eAI1CgB,EAAMtD,WAAa,IAAIiC,IAAY,iBAWnC,IAAMuC,EAAS,CACbC,MAAO,GACPC,UAAW,KACXC,QAAS,KAELnE,EAAY,IAAIoE,IAAWtB,EAAOC,EAAQ,CAAEkB,MAAOD,EAAOC,MAAOI,SAAUL,EAAOE,UAAWI,QAASN,EAAOG,UAC7GI,EAAW,IAAIC,IAAgBhD,GAC/BiD,EAAkB,IAAIC,IAAY5B,EAAOC,GAE/C,GADAwB,EAASI,QAASF,GACF,IAAZrD,EAAe,CACjBmD,EAASI,QAAQ3E,GACjB,IAAM4E,EAAY,IAAIC,IAAiB,IAAIpD,IAAcpD,OAAOwD,WAAYxD,OAAOyD,aAAc,GAAK,IAAM,KAC5GyC,EAASI,QAAQC,GACjB,IAAME,EAAe,IAAIC,IAAYC,KACrCF,EAAa3E,SAAb,OAAgCC,MAAQ,GACxC0E,EAAa3E,SAAb,SAAkCC,MAAQ,IAC1CmE,EAASI,QAAQG,GAEnB,IAAMG,EAAa,IAAIC,IAIvB,GAHAX,EAASI,QAASM,IAGb9C,EAAqB,CACxB,IAAMgD,EAAM,IAAIC,IAChBD,EAAI/B,IAAKY,EAAQ,QAAS,EAAK,IAAO,IAAKqB,SAAS,kBAAMtF,EAAaC,EAAW,QAASgE,EAAOC,SAClGkB,EAAI/B,IAAKY,EAAQ,YAAa,EAAK,EAAK,MAAOqB,SAAS,kBAAMtF,EAAaC,EAAW,WAAYgE,EAAOE,aACzGiB,EAAI/B,IAAKY,EAAQ,UAAW,EAAK,IAAM,MAAOqB,SAAS,kBAAMtF,EAAaC,EAAW,UAAWgE,EAAOG,WACvGgB,EAAIG,QAIN,IAAIC,EAAqB,EACnBC,EAAY,IAAI/D,IAAqBU,EAAsB,EAAI,EAAGoB,EAAgB,GAAK,EAAGA,EAAgB,GAAK,IAC/GkC,EAAY,IAAIhE,IAAwB,CAC1ChC,MAAO,kBACPiG,SAAU,aACVC,SAAU,iBACVC,UAAW,GACXC,aAAc,EACdC,gBAAiB,MAEjBC,EAAa,IAAItE,IAAY+D,EAAWC,GAC5CM,EAAWC,SAASC,wBACpBF,EAAW/C,SAASC,IAAI,EAAE,GAAG,IAC7B8C,EAAWG,MAAMC,EAAI,IACrB,IAAIC,EAAuB,IAAI3E,IAAasE,EAAW/C,SAAUb,EAAsB,EAAI,GAC3FW,EAAMM,IAAK2C,GACX3D,QAAQC,IAAI,iBAAkBU,EAAOC,SAASmD,GAC9C/D,QAAQC,IAAI,eAAgB0D,EAAW/C,SAASmD,GAChD/D,QAAQC,IAAI,eAAgBU,EAAOC,SAASmD,EAAIJ,EAAW/C,SAASmD,GAmChEhE,EACFhE,SAAS0F,iBAAiB,YAlBR,SAAEwC,GAEpB,GADAA,EAAMC,kBACF7C,IAAcD,EAAU,CAC1BE,EAAMC,EAAK0C,EAAME,QAAQ,GAAGC,QAAUnI,OAAOwD,WAAc,EAAI,EAC/D6B,EAAME,GAAOyC,EAAME,QAAQ,GAAGE,QAAUpI,OAAOyD,YAAe,EAAI,EAGlE,IAAI4E,EAAS,IAAIjF,IAAciC,EAAMC,EAAGD,EAAME,EAAG,IACjD8C,EAAOC,UAAW5D,GAClB,IAAI6D,EAAMF,EAAOG,IAAK9D,EAAOC,UAAW8D,YACpCC,IAAchE,EAAOC,SAASmD,EAAI,IAAMS,EAAIT,EAC5Ca,EAAMjE,EAAOC,SAASiE,QAAQ7D,IAAKwD,EAAIM,eAAgBH,IAC3DhB,EAAW/C,SAASmE,KAAKH,MAMyB,GAEpD7I,SAAS0F,iBAAiB,YApCR,SAAEwC,GAElB,GADAA,EAAMC,kBACF7C,IAAcD,EAAU,CAC1BE,EAAMC,EAAK0C,EAAMG,QAAUnI,OAAOwD,WAAc,EAAI,EACpD6B,EAAME,GAAOyC,EAAMI,QAAUpI,OAAOyD,YAAe,EAAI,EAGvD,IAAI4E,EAAS,IAAIjF,IAAciC,EAAMC,EAAGD,EAAME,EAAG,IACjD8C,EAAOC,UAAW5D,GAClB,IAAI6D,EAAMF,EAAOG,IAAK9D,EAAOC,UAAW8D,YACpCC,IAAchE,EAAOC,SAASmD,EAAI,IAAMS,EAAIT,EAC5Ca,EAAMjE,EAAOC,SAASiE,QAAQ7D,IAAKwD,EAAIM,eAAgBH,IAC3DhB,EAAW/C,SAASmE,KAAKH,MAwBuB,GAItD,IAGMI,EAAkBjJ,SAASuE,eAAe,eAG1C2E,EAAUlJ,SAASuE,eAAe,mBAClC4E,EAAanJ,SAASuE,eAAe,qBACvC6E,EAAQ,IAAI9F,IAEZ+F,EAAQ,EACRC,EAViB,GAWjBC,EAAgB,SAAAC,OAXC,IAWwBC,YAEvCC,EAAW1J,SAASuE,eAAe,YACnCoF,EAAkB3J,SAASuE,eAAe,yBAG1CqF,EAAU,IAAItG,IAAwB,CAC1ChC,MAAO,kBACPiG,SAAU,kBACVC,SAAU,gBACVC,UAAW,EACXC,aAAc,EACdC,gBAAiB,IAEfkC,EAAW,IACX7F,IACF6F,EAAW,KAEb5F,QAAQC,IAAI,eAAgB2F,GAC5BD,EAAQE,QAAU,GAClB,IAAMC,EAAU,IAAIzG,IAAqB,IAAK8B,EAAgB,GAAK,GAAIA,EAAgB,GAAK,IACtF4E,EAAW,IAAI1G,IAAYyG,EAASH,GAC1CI,EAASnF,SAASC,IAAI+E,EAAU,KAAM,KACtCG,EAASjC,MAAMC,EAAI,GACnB,IAAMiC,EAAU,IAAI3G,IAAwB,CAC1ChC,MAAO,iBACPiG,SAAU,aACVC,SAAU,kBACVC,UAAW,EACXC,aAAc,GACdC,gBAAiB,KAEbuC,EAAU,IAAI5G,IAAqB,IAAK8B,EAAgB,GAAK,GAAIA,EAAgB,GAAK,IAEtF+E,EAAU,IAAI7G,IAAwB,CAC1ChC,MAAO,iBACPiG,SAAU,aACVC,SAAU,kBACVC,UAAW,EACXC,aAAc,GACdC,gBAAiB,KAEfyC,EAA8B,GAC5BC,GAAU,IAAI/G,IAAmB,GAAG,IAAK8B,EAAgB,GAAK,EAAGA,EAAgB,EAAI,GAS3FgF,EARsB,WACpB,IAAI,IAAIE,EAAI,EAAGA,EAZI,GAYcA,IAAK,CACpC,IAAMC,EAAe,IAAIjH,IAAY+G,GAASF,GAC9CI,EAAa1F,SAASC,IAAWwF,EAAEpI,EAAkB,GAAG,KAA7B,IAAuD,GAAdG,KAAKC,SAAV,KAAwB,KACvF8H,EAAcI,KAAKD,GAErB,OAAOH,EAEOK,GAChB,IAAIC,GAAY,IAAIpH,IAAY4G,EAASD,GACzCS,GAAU7F,SAASC,KAAK,KAAK,KAAK,KAClC4F,GAAU3C,MAAMjD,IAAI,IAAI,IAAI,IAC5B,IAAI6F,GAAY,IAAIrH,IAAY4G,EAASD,GACzCU,GAAU9F,SAASC,IAAI,GAAG,KAAK,KAC/B6F,GAAU5C,MAAMjD,IAAI,IAAI,IAAI,IAC5B,IAAI8F,GAAY,IAAItH,IAAY4G,EAASD,GACzCW,GAAU/F,SAASC,IAAI,KAAK,KAAK,KACjC8F,GAAU7C,MAAMjD,IAAI,IAAI,IAAI,IAC5B,IAAI+F,GAAY,IAAIvH,IAAY4G,EAASD,GACzCY,GAAUhG,SAASC,IAAI,KAAK,KAAK,KACjC+F,GAAU9C,MAAMjD,IAAI,IAAI,IAAI,IAG5BH,EAAMM,IAAN6F,MAAAnG,EAAK,CAAM+F,GAAWC,GAAWC,GAAWC,IAAvCrB,OAAAzG,OAAAgI,EAAA,EAAAhI,CACAqH,GADA,CACeJ,KAGpB,IAAIgB,GAAiB,EACjBC,GAAa,IACbjH,IACFiH,GAAa,MAEf,IAAMC,GAAW,IAAI5H,IAAkB,EAAE,EAAE,EAAE,EAAE,EAAE,GACjD4H,GAASC,qBACT,IAAMC,GAAW,IAAI9H,IAAwB,CAC3ChC,MAAO,oBAEH+J,GAAY,IAAI/H,IAAY4H,GAAUE,IAC5CC,GAAUxG,SAASC,IAAI,KAAM,GAAI,IACjCuG,GAAUtD,MAAMC,EAAI,IACpB,IAAIsD,GAAmB,IAAIhI,IAAW,IAAIiI,IAAS,IAAIA,KACvDD,GAAiBE,cAAcH,IAC/B1G,EAAMM,IAAKoG,IAEX,IAAMI,GAAgB,IAAIC,IAAML,GAAUM,SAASrK,OAC9CsK,GAAG,IAAItI,IAAY,oBAAqB,KACxCuI,OAAOC,KACPC,MAAK,GACLC,OAAOC,IAAOC,UAAUC,OACxBC,QA+HLC,sBA7HgB,SAAVC,EAAWC,GAQf,GANG3E,EAAWC,SAAS2E,gBAMnBlH,IAAcD,EAAU,CAGvB4D,GAAmBC,GAAWC,GAAcO,IAAarE,GAAYuC,EAAWC,SAAS2E,gBAC1FlB,GAAiBmB,iBAAiBxE,KAClC3C,GAAY,EACZrB,QAAQC,IAAI,aACZgF,EAAQlI,MAAM0L,mBAAqB,SACnCvD,EAAWnI,MAAM0L,mBAAqB,SACtChD,EAASiD,UAAU1H,IAAI,SACvBgE,EAAgB0D,UAAU1H,IAAI,eAC9BgE,EAAgBtH,UAAYY,KAI9B8G,EAAQD,EAAMwD,WACdtD,GA1HQ,EA0HSD,EACjBE,EAAQ,SAAAC,OAAYnH,KAAKG,MAAM8G,IAC3BI,IACFA,EAAS/H,UAAY4H,GAInBD,GAAQ,IAAMK,IAAoBA,EAAgBgD,UAAUrI,SAAS,YACvEqF,EAAgBgD,UAAU1H,IAAI,WAE5BqE,GAAQ,IAAMK,GAChBA,EAAgBkD,SAIlBnC,GAAU7F,SAASW,GAAK,IACxBmF,GAAU9F,SAASW,GAAK,IACxBoF,GAAU/F,SAASW,GAAK,IACxBqF,GAAUhG,SAASW,GAAK,IAExB,IAAI,IAAI8E,EAAI,EAAGA,EA1GE,GA0GgBA,IAC/BF,EAAcE,GAAGzF,SAASW,GAAK,EAC5B4E,EAAcE,GAAGzF,SAASW,IAAM,MACjC4E,EAAcE,GAAGzF,SAASW,EAAI,KAK/ByD,GAAmBC,GAAWC,GAAc9G,KAAKG,MAAM8G,IAAS,IACjEjE,GAAW,EACX6D,EAAQlI,MAAM0L,mBAAqB,SACnCvD,EAAWnI,MAAM0L,mBAAqB,SACtCzD,EAAgB0D,UAAU1H,IAAI,eAC9BgE,EAAgB0D,UAAU1H,IAAI,oBAC9BgE,EAAgBtH,UAAYc,KA4B9B,GAvBAuI,GAAiB3I,KAAKyK,KAAKlF,EAAW/C,SAASY,GAC/C4F,GAAU0B,QAAQ,KAClB1B,GAAUxG,SAASW,GAAKxB,EAAsB,IAAM,EACpDqH,GAAUxG,SAASY,GAAKuF,GAAeC,IACpCI,GAAUxG,SAASY,IAAMmC,EAAW/C,SAASY,IAC7CuF,IAAkB,EAAIK,GAAUxG,SAASY,EAAImC,EAAW/C,SAASY,EAChE4F,GAAUxG,SAASY,EAAImC,EAAW/C,SAASY,MAC7C4F,GAAUxG,SAASY,EAAImC,EAAW/C,SAASY,GAE1C4F,GAAUxG,SAASW,IAAM,MAAQH,IAAaC,EAC/C+F,GAAUxG,SAASW,EAAKtD,EAAkB,IAAI,KAEvCmJ,GAAUxG,SAASW,IAAM,MAAQF,GAAaA,KACrD+F,GAAUxG,SAASW,GAAK,KAGtB6F,GAAUxD,SAASmF,aACrB1B,GAAiBtC,KAAMqC,GAAUxD,SAASmF,aAAcC,aAAc5B,GAAU6B,aAIlFzB,GAAc0B,OAAOZ,GAEjBjH,EAAW,CACb8B,GAAsB,GACtBQ,EAAW/C,SAASY,GAAK,GAAI2B,EAG7BsD,GAAU7F,SAASW,GAAK,KACxBmF,GAAU9F,SAASW,GAAK,KACxBoF,GAAU/F,SAASW,GAAK,KACxBqF,GAAUhG,SAASW,GAAK,KAExB,IAAI,IAAI8E,EAAI,EAAGA,EA9JA,GA8JkBA,IAC/BF,EAAcE,GAAGzF,SAASW,GAAK,GAC5B4E,EAAcE,GAAGzF,SAASW,IAAM,MACjC4E,EAAcE,GAAGzF,SAASW,EAAI,UAG7B,GAAIH,EAAU,CACnB+B,GAAsB,GACtBQ,EAAW/C,SAASW,GAAK,GAAI4B,EAG7BsD,GAAU7F,SAASW,GAAK,KACxBmF,GAAU9F,SAASW,GAAK,KACxBoF,GAAU/F,SAASW,GAAK,KACxBqF,GAAUhG,SAASW,GAAK,KAExB,IAAI,IAAI8E,EAAI,EAAGA,EA9KA,GA8KkBA,IAC/BF,EAAcE,GAAGzF,SAASW,GAAK,GAC5B4E,EAAcE,GAAGzF,SAASW,IAAM,MACjC4E,EAAcE,GAAGzF,SAASW,EAAI,KAKpC6G,sBAAsBC,GAEtBlG,EAASgH,OAAQ,MCvUfC,CAAyB1I,EAAOtB,EAAUuB,EAAQ3B,EAASe,OAExD,CACH,IAAMsJ,EAAUxN,EAAMyN,uBACtBvN,SAASqE,KAAKmJ,YAAaF,KAEhC,CAACrK,IAGAwK,EAAAC,EAAAzN,cAAA,OAAK0N,cAAY,SAAS5M,GAAG,UACzB0M,EAAAC,EAAAzN,cAAA,UAAQc,GAAG,aAAa6M,QAxDV,WAEd1K,EADY,MAAZD,EACW,EAEA,OAoDX,WAGAwK,EAAAC,EAAAzN,cAAA,OAAKc,GAAG,kBACJ0M,EAAAC,EAAAzN,cAAA,OAAKc,GAAG,kBACJ0M,EAAAC,EAAAzN,cAAA,OAAKc,GAAG,oBACR0M,EAAAC,EAAAzN,cAAA,OAAKc,GAAG,mBACR0M,EAAAC,EAAAzN,cAAA,OAAKc,GAAG,uBAEZ0M,EAAAC,EAAAzN,cAAA,OAAKc,GAAG,cAEZ0M,EAAAC,EAAAzN,cAAA,OAAKc,GAAG,yBACJ0M,EAAAC,EAAAzN,cAAA,OAAKc,GAAG,oBAAR,uBAEJ0M,EAAAC,EAAAzN,cAAA,OAAKc,GAAG,mBCpEL8M,MARf,WACE,OACEJ,EAAAC,EAAAzN,cAAA,OAAKmE,UAAU,OACbqJ,EAAAC,EAAAzN,cAAC6N,EAAD,CAAqBC,IAAK,MCOjBC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxCC,EAAA9N,EAAA,GAAA+N,KAAAD,EAAAE,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCHDW,IAASC,WACpB7O,SAASuE,eAAe,SAErB6I,OACHK,EAAAC,EAAAzN,cAACwN,EAAAC,EAAMoB,WAAP,KACErB,EAAAC,EAAAzN,cAAC8O,EAAD,QAOJf","file":"static/js/main.188106a2.chunk.js","sourcesContent":["// Not my code, came from https://github.com/mrdoob/three.js/blob/master/examples/jsm/WebGL.js\r\n\r\nclass WEBGL {\r\n\r\n\tstatic isWebGLAvailable() {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tconst canvas = document.createElement( 'canvas' );\r\n\t\t\treturn !! ( window.WebGLRenderingContext && ( canvas.getContext( 'webgl' ) || canvas.getContext( 'experimental-webgl' ) ) );\r\n\r\n\t\t} catch ( e ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tstatic isWebGL2Available() {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tconst canvas = document.createElement( 'canvas' );\r\n\t\t\treturn !! ( window.WebGL2RenderingContext && canvas.getContext( 'webgl2' ) );\r\n\r\n\t\t} catch ( e ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tstatic getWebGLErrorMessage() {\r\n\r\n\t\treturn this.getErrorMessage( 1 );\r\n\r\n\t}\r\n\r\n\tstatic getWebGL2ErrorMessage() {\r\n\r\n\t\treturn this.getErrorMessage( 2 );\r\n\r\n\t}\r\n\r\n\tstatic getErrorMessage( version ) {\r\n\r\n\t\tconst names = {\r\n\t\t\t1: 'WebGL',\r\n\t\t\t2: 'WebGL 2'\r\n\t\t};\r\n\r\n\t\tconst contexts = {\r\n\t\t\t1: window.WebGLRenderingContext,\r\n\t\t\t2: window.WebGL2RenderingContext\r\n\t\t};\r\n\r\n\t\tlet message = 'Your $0 does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000\">$1</a>';\r\n\r\n\t\tconst element = document.createElement( 'div' );\r\n\t\telement.id = 'webglmessage';\r\n\t\telement.style.fontFamily = 'monospace';\r\n\t\telement.style.fontSize = '13px';\r\n\t\telement.style.fontWeight = 'normal';\r\n\t\telement.style.textAlign = 'center';\r\n\t\telement.style.background = '#fff';\r\n\t\telement.style.color = '#000';\r\n\t\telement.style.padding = '1.5em';\r\n\t\telement.style.width = '400px';\r\n\t\telement.style.margin = '5em auto 0';\r\n\r\n\t\tif ( contexts[ version ] ) {\r\n\r\n\t\t\tmessage = message.replace( '$0', 'graphics card' );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmessage = message.replace( '$0', 'browser' );\r\n\r\n\t\t}\r\n\r\n\t\tmessage = message.replace( '$1', names[ version ] );\r\n\r\n\t\telement.innerHTML = message;\r\n\r\n\t\treturn element;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { WEBGL };","export const bokehChanger = (bokehPass, paramName, paramsValue) => {\r\n    bokehPass.uniforms[paramName].value = paramsValue;\r\n}","import * as THREE from 'three';\r\nimport { Vector3 } from 'three';\r\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min';\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\r\nimport { BokehPass } from 'three/examples/jsm/postprocessing/BokehPass';\r\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\r\nimport { VignetteShader } from 'three/examples/jsm/shaders/VignetteShader';\r\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass';\r\nimport { OutputPass } from 'three/examples/jsm/postprocessing/OutputPass';\r\nimport { Tween, Easing } from '@tweenjs/tween.js';\r\nimport { bokehChanger } from '../guiUtils/guiUtils';\r\n\r\nexport const setupSquareGameLights = ( scene: THREE.Scene ) => {\r\n    let dirLight = new THREE.DirectionalLight('rgb(255,150,80)', 1);\r\n    dirLight.position.set( 500, 300, -500 );\r\n    dirLight.rotateX(50);\r\n    scene.add( dirLight );\r\n\r\n    // Directional light helper (temp af)\r\n    const helpDirLight = new THREE.DirectionalLightHelper( dirLight );\r\n    //scene.add( helpDirLight );\r\n\r\n    let hemiLight = new THREE.HemisphereLight(0xffffff, 0x232323, 1);\r\n    scene.add( hemiLight );\r\n};\r\n\r\nexport const squareGameFunctionality = (\r\n    scene: THREE.Scene,\r\n    renderer: any,\r\n    camera: THREE.PerspectiveCamera,\r\n    quality: any,\r\n    isMobileAspectRatio: boolean) => {\r\n\r\n      const isHighQuality = quality === 1;\r\n\r\n      let levelWin = false;\r\n      let levelLose = false;\r\n\r\n      let mouse = {x: 0, y: 0};\r\n\r\n      // Window Resizing\r\n      window.addEventListener( 'resize', onWindowResize );\r\n      function onWindowResize() {\r\n\r\n\t\t\t\tcamera.aspect = window.innerWidth / window.innerHeight;\r\n\t\t\t\tcamera.updateProjectionMatrix();\r\n\r\n\t\t\t\trenderer.setSize( window.innerWidth, window.innerHeight );\r\n\t\t\t};\r\n\r\n      // Skybox\r\n      scene.background = new THREE.Color('rgb(18,54,89)');\r\n      // TODO: ADD TEXTURED SKYBOX FOR HIGH QUALITY\r\n      // const r = 'textures/cube/Bridge2/';\r\n      // const urls = [ r + 'posx.jpg', r + 'negx.jpg',\r\n      //             r + 'posy.jpg', r + 'negy.jpg',\r\n      //             r + 'posz.jpg', r + 'negz.jpg' ];\r\n      // const textureCube = new THREE.CubeTextureLoader().load( urls );\r\n\r\n      // scene.background = textureCube;\r\n\r\n      // Depth of Field, Bloom and Vignette effect setup\r\n      const params = {\r\n        focus: 49,\r\n        aperature: 0.005,\r\n        maxBlur: 0.01\r\n      };\r\n      const bokehPass = new BokehPass( scene, camera, { focus: params.focus, aperture: params.aperature, maxblur: params.maxBlur });\r\n      const composer = new EffectComposer( renderer );\r\n      const basicRenderPass = new RenderPass( scene, camera );\r\n      composer.addPass( basicRenderPass );\r\n      if (quality === 1) {\r\n        composer.addPass(bokehPass);\r\n        const bloomPass = new UnrealBloomPass( new THREE.Vector2(window.innerWidth, window.innerHeight), 0.7, 0.09, 0.09);\r\n        composer.addPass(bloomPass);\r\n        const vignettePass = new ShaderPass( VignetteShader );\r\n        vignettePass.uniforms[\"offset\"].value = 0.7;\r\n        vignettePass.uniforms[\"darkness\"].value = 1.1;\r\n        composer.addPass(vignettePass);\r\n      }\r\n      const outputPass = new OutputPass();\r\n      composer.addPass( outputPass );\r\n\r\n      // set up gui\r\n      if (!isMobileAspectRatio) {\r\n        const gui = new GUI();\r\n        gui.add( params, 'focus', 0.0, 400.0, 0.5).onChange(() => bokehChanger(bokehPass, 'focus', params.focus));\r\n        gui.add( params, 'aperature', 0.0, 1.0, 0.001).onChange(() => bokehChanger(bokehPass, 'aperture', params.aperature));\r\n        gui.add( params, 'maxBlur', 0.0, 0.05, 0.001).onChange(() => bokehChanger(bokehPass, 'maxblur', params.maxBlur));\r\n        gui.close();\r\n      }\r\n\r\n      // Player sphere creation\r\n      let playerAcceleration = 0;\r\n      const playerGeo = new THREE.SphereGeometry(isMobileAspectRatio ? 4 : 6, isHighQuality ? 16 : 8, isHighQuality ? 36 : 18);\r\n      const playerMat = new THREE.MeshPhongMaterial({\r\n          color: 'rgb(23,195,230)',\r\n          emissive: 'rgb(0,0,0)',\r\n          specular: 'rgb(255,220,0)',\r\n          shininess: 30,\r\n          reflectivity: 1,\r\n          refractionRatio: 0.98\r\n      });\r\n      let playerMesh = new THREE.Mesh( playerGeo, playerMat );\r\n      playerMesh.geometry.computeBoundingSphere();\r\n      playerMesh.position.set(0,0,-50);\r\n      playerMesh.scale.z = 0.15;\r\n      let playerBoundingSphere = new THREE.Sphere(playerMesh.position, isMobileAspectRatio ? 4 : 6);\r\n      scene.add( playerMesh );\r\n      console.log('camera pos z: ', camera.position.z);\r\n      console.log('player pos z', playerMesh.position.z);\r\n      console.log('distance z: ', camera.position.z - playerMesh.position.z);\r\n\r\n      const onMouseMove = ( event: MouseEvent ) => {\r\n          event.preventDefault();\r\n          if(!levelLose && !levelWin) {\r\n            mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\r\n            mouse.y = - (event.clientY / window.innerHeight) * 2 + 1;\r\n        \r\n            // Make the sphere follow the mouse\r\n            let vector = new THREE.Vector3(mouse.x, mouse.y, 0.5);\r\n            vector.unproject( camera );\r\n            let dir = vector.sub( camera.position ).normalize();\r\n            let distance = - (camera.position.z + 50) / dir.z;\r\n            let pos = camera.position.clone().add( dir.multiplyScalar( distance ) );\r\n            playerMesh.position.copy(pos);\r\n          }\r\n      };\r\n\r\n      const onTouchMove = ( event: TouchEvent ) => {\r\n        event.preventDefault();\r\n        if(!levelLose && !levelWin) {\r\n          mouse.x = (event.touches[0].clientX / window.innerWidth) * 2 - 1;\r\n          mouse.y = - (event.touches[0].clientY / window.innerHeight) * 2 + 1;\r\n      \r\n          // Make the sphere follow the mouse\r\n          let vector = new THREE.Vector3(mouse.x, mouse.y, 0.5);\r\n          vector.unproject( camera );\r\n          let dir = vector.sub( camera.position ).normalize();\r\n          let distance = - (camera.position.z + 50) / dir.z;\r\n          let pos = camera.position.clone().add( dir.multiplyScalar( distance ) );\r\n          playerMesh.position.copy(pos);\r\n        }\r\n    };\r\n\r\n      // When the mouse moves, call the given function\r\n      if (isMobileAspectRatio) {\r\n        document.addEventListener('touchmove', onTouchMove, false);\r\n      } else {\r\n        document.addEventListener('mousemove', onMouseMove, false);\r\n      }\r\n\r\n      // Level setup\r\n      let level = 1;\r\n      const LEVEL_1_TIME = 50;\r\n\r\n      const winLoseLevelDiv = document.getElementById('winLoseText');\r\n\r\n      // Timer UI setup\r\n      const bigHand = document.getElementById('timerBigLineAni');\r\n      const littleHand = document.getElementById('timerSmallLineAni');\r\n      let clock = new THREE.Clock();\r\n      let speed = 1;\r\n      let delta = 0;\r\n      let time = LEVEL_1_TIME;\r\n      let timeText: string = `Left: ${LEVEL_1_TIME.toString()}`;\r\n\r\n      const timerDiv = document.getElementById('timerDiv');\r\n      const instructionsDiv = document.getElementById('instructionsContainer');\r\n      \r\n      // BG Objects setup\r\n      const moonMat = new THREE.MeshPhongMaterial({\r\n        color: 'rgb(175,130,85)',\r\n        emissive: 'rgb(175,130,85)',\r\n        specular: 'rgb(50,50,50)',\r\n        shininess: 0,\r\n        reflectivity: 0,\r\n        refractionRatio: 0\r\n      });\r\n      let moonXPos = 500;\r\n      if (isMobileAspectRatio) {    \r\n        moonXPos = 375;\r\n      }\r\n      console.log('moon x pos: ', moonXPos);\r\n      moonMat.opacity = 0.1;\r\n      const moonGeo = new THREE.SphereGeometry(400, isHighQuality ? 30 : 15, isHighQuality ? 30 : 15);\r\n      const moonMesh = new THREE.Mesh( moonGeo, moonMat );\r\n      moonMesh.position.set(moonXPos, 300, -400);\r\n      moonMesh.scale.z = 0.1;\r\n      const hillMat = new THREE.MeshPhongMaterial({\r\n        color: 'rgb(15,59,102)',\r\n        emissive: 'rgb(0,0,0)',\r\n        specular: 'rgb(255,230,50)',\r\n        shininess: 2,\r\n        reflectivity: 0.1,\r\n        refractionRatio: 0.1\r\n      });\r\n      const hillGeo = new THREE.SphereGeometry(175, isHighQuality ? 20 : 10, isHighQuality ? 20 : 10);\r\n      const NUM_OF_TREES = 35;\r\n      const treeMat = new THREE.MeshPhongMaterial({\r\n        color: 'rgb(23,69,115)',\r\n        emissive: 'rgb(0,0,0)',\r\n        specular: 'rgb(200,180,50)',\r\n        shininess: 1,\r\n        reflectivity: 0.1,\r\n        refractionRatio: 0.1\r\n      });\r\n      let treeMeshArray: THREE.Mesh[] = [];\r\n      const treeGeo = new THREE.ConeGeometry(50,150, isHighQuality ? 12 : 6, isHighQuality ? 6 : 3);\r\n      const generateTrees = (): THREE.Mesh[] => {\r\n        for(let i = 0; i < NUM_OF_TREES; i++) {\r\n          const tempTreeMesh = new THREE.Mesh( treeGeo, treeMat );\r\n          tempTreeMesh.position.set(-2000+(i*randomNumberRange(70,140)),-150+(Math.random()*30),-200);\r\n          treeMeshArray.push(tempTreeMesh);\r\n        }\r\n        return treeMeshArray;\r\n      };\r\n      treeMeshArray = generateTrees();\r\n      let hill1Mesh = new THREE.Mesh( hillGeo, hillMat );\r\n      hill1Mesh.position.set(-300,-175,-300);\r\n      hill1Mesh.scale.set(1.2,1.5,0.4);\r\n      let hill2Mesh = new THREE.Mesh( hillGeo, hillMat );\r\n      hill2Mesh.position.set(0,-250,-300);\r\n      hill2Mesh.scale.set(1.2,1.5,0.4);\r\n      let hill3Mesh = new THREE.Mesh( hillGeo, hillMat );\r\n      hill3Mesh.position.set(600,-175,-300);\r\n      hill3Mesh.scale.set(1.2,1.5,0.4);\r\n      let hill4Mesh = new THREE.Mesh( hillGeo, hillMat );\r\n      hill4Mesh.position.set(900,-250,-300);\r\n      hill4Mesh.scale.set(1.2,1.5,0.4);\r\n      \r\n\r\n      scene.add( hill1Mesh, hill2Mesh, hill3Mesh, hill4Mesh,\r\n        ...treeMeshArray, moonMesh );\r\n\r\n      // Enemy AI Setup\r\n      let enemyDirection = 1;\r\n      let enemySpeed = 0.15;\r\n      if (isMobileAspectRatio) {\r\n        enemySpeed = 0.005;\r\n      }\r\n      const enemyGeo = new THREE.BoxGeometry(9,9,9,1,1,1);\r\n      enemyGeo.computeBoundingBox();\r\n      const enemyMat = new THREE.MeshPhongMaterial({\r\n        color: 'rgb(230,132,34)'\r\n      })\r\n      const enemyMesh = new THREE.Mesh( enemyGeo, enemyMat );\r\n      enemyMesh.position.set(2350, 0, -50);\r\n      enemyMesh.scale.z = 0.15;\r\n      let enemyBoundingBox = new THREE.Box3(new Vector3, new Vector3);\r\n      enemyBoundingBox.setFromObject(enemyMesh);\r\n      scene.add( enemyMesh );\r\n\r\n      const enemyMatTween = new Tween(enemyMesh.material.color)\r\n          .to(new THREE.Color('rgb(255,210,200)'), 100)\r\n          .repeat(Infinity)\r\n          .yoyo(true)\r\n          .easing(Easing.Quadratic.InOut)\r\n          .start();\r\n\r\n      const animate = (aniTime: any) => {\r\n\r\n        if(playerMesh.geometry.boundingSphere && !levelLose) {\r\n          //console.log('bounding box?: ', !!enemyMesh.geometry.boundingBox);\r\n          //console.log(enemyBoundingBox.distanceToPoint(playerBoundingSphere.center));\r\n          //console.log(!!enemyBoundingBox.intersectsSphere(playerBoundingSphere));\r\n        }\r\n        \r\n        if(!levelLose && !levelWin) {\r\n\r\n          // Collision detection for player and enemy\r\n          if(winLoseLevelDiv && bigHand && littleHand && timerDiv && !levelWin && playerMesh.geometry.boundingSphere &&\r\n            enemyBoundingBox.intersectsSphere(playerBoundingSphere)) {\r\n            levelLose = true;\r\n            console.log('COLLISION');\r\n            bigHand.style.animationPlayState = 'paused';\r\n            littleHand.style.animationPlayState = 'paused';\r\n            timerDiv.classList.add('blink');\r\n            winLoseLevelDiv.classList.add('slowUIEnter');\r\n            winLoseLevelDiv.innerHTML = randomLoseMessage();\r\n          }\r\n\r\n          // Setup timer\r\n          delta = clock.getDelta();\r\n          time -= (speed * delta);\r\n          timeText = `Left: ${Math.floor(time)}`;\r\n          if (timerDiv) {\r\n            timerDiv.innerHTML = timeText;\r\n          };\r\n\r\n          // Removing the instructions UI\r\n          if (time <= 45 && instructionsDiv && !instructionsDiv.classList.contains('exitDom')) {\r\n            instructionsDiv.classList.add('exitDom');\r\n          }\r\n          if (time <= 44 && instructionsDiv) {\r\n            instructionsDiv.remove();\r\n          }\r\n\r\n          // BG movement\r\n          hill1Mesh.position.x -= 0.04;\r\n          hill2Mesh.position.x -= 0.04;\r\n          hill3Mesh.position.x -= 0.04;\r\n          hill4Mesh.position.x -= 0.04;\r\n\r\n          for(let i = 0; i < NUM_OF_TREES; i++) {\r\n            treeMeshArray[i].position.x -= 6;\r\n            if(treeMeshArray[i].position.x <= -2000) {\r\n              treeMeshArray[i].position.x = 2000\r\n            }\r\n          };\r\n\r\n          // Winning trigger logic\r\n          if(winLoseLevelDiv && bigHand && littleHand && Math.floor(time) <= 0) {\r\n            levelWin = true;\r\n            bigHand.style.animationPlayState = 'paused';\r\n            littleHand.style.animationPlayState = 'paused';\r\n            winLoseLevelDiv.classList.add('slowUIEnter');\r\n            winLoseLevelDiv.classList.add('winningAnimation');\r\n            winLoseLevelDiv.innerHTML = randomWinMessage();\r\n          }\r\n        }\r\n\r\n          // Enemy movement \r\n          enemyDirection = Math.sign(playerMesh.position.y);\r\n          enemyMesh.rotateZ(0.05);\r\n          enemyMesh.position.x -= isMobileAspectRatio ? 4.5 : 3;\r\n          enemyMesh.position.y += enemyDirection*enemySpeed;\r\n          if(enemyMesh.position.y === playerMesh.position.y ||\r\n            (enemyDirection >= 0 ? enemyMesh.position.y > playerMesh.position.y :\r\n              enemyMesh.position.y < playerMesh.position.y)) {\r\n            enemyMesh.position.y = playerMesh.position.y;\r\n          }\r\n          if(enemyMesh.position.x <= -250 && !levelWin && !levelLose) {\r\n            enemyMesh.position.x  = randomNumberRange(150,750);\r\n          }\r\n          else if (enemyMesh.position.x <= -250 && (levelLose || levelLose)) {\r\n            enemyMesh.position.x = -249;\r\n          }\r\n          // Have the enemy bounding box follow the enemy's position\r\n          if (enemyMesh.geometry.boundingBox) {\r\n            enemyBoundingBox.copy( enemyMesh.geometry.boundingBox ).applyMatrix4( enemyMesh.matrixWorld );\r\n          }\r\n\r\n          // Enemy material animation\r\n          enemyMatTween.update(aniTime);\r\n\r\n          if (levelLose) {\r\n            playerAcceleration += 0.1;\r\n            playerMesh.position.y -= 0.1+playerAcceleration;\r\n\r\n            // BG movement\r\n            hill1Mesh.position.x -= 0.008;\r\n            hill2Mesh.position.x -= 0.008;\r\n            hill3Mesh.position.x -= 0.008;\r\n            hill4Mesh.position.x -= 0.008;\r\n\r\n            for(let i = 0; i < NUM_OF_TREES; i++) {\r\n              treeMeshArray[i].position.x -= 0.2;\r\n              if(treeMeshArray[i].position.x <= -2000) {\r\n                treeMeshArray[i].position.x = 2000\r\n              }\r\n            };\r\n          } else if (levelWin) {\r\n            playerAcceleration += 0.1;\r\n            playerMesh.position.x += 0.1+playerAcceleration;\r\n\r\n            // BG movement\r\n            hill1Mesh.position.x -= 0.008;\r\n            hill2Mesh.position.x -= 0.008;\r\n            hill3Mesh.position.x -= 0.008;\r\n            hill4Mesh.position.x -= 0.008;\r\n\r\n            for(let i = 0; i < NUM_OF_TREES; i++) {\r\n              treeMeshArray[i].position.x -= 0.2;\r\n              if(treeMeshArray[i].position.x <= -2000) {\r\n                treeMeshArray[i].position.x = 2000\r\n              }\r\n            };\r\n          }\r\n\r\n          requestAnimationFrame(animate);\r\n\r\n          composer.render( 0.1 ); // 0.1 is the delta time value\r\n      };\r\n\r\n      requestAnimationFrame(animate);\r\n};\r\n\r\nconst randomNumberRange = (min: number, max: number) => { \r\n  return Math.random() * (max - min) + min;\r\n};\r\n\r\nconst randomLoseMessage = (): string => {\r\n  const randomNum = Math.floor(randomNumberRange(0,4));\r\n  const loseMessages = [\r\n    'Yikes. I mean you can always refresh to try again.',\r\n    'Uh ooooh. Refresh time?',\r\n    'That\\'s a bummer my guy. Refresh?',\r\n    'Yeah, you better refresh dude. That suckssss'\r\n  ];\r\n  return loseMessages[randomNum];\r\n};\r\n\r\nconst randomWinMessage = (): string => {\r\n  const randomNum = Math.floor(randomNumberRange(0,4));\r\n  const winMessages = [\r\n    'You fucking won dude! Refresh to give it another go.',\r\n    'Wowzers brah! I\\'m feeling a refresh comming on.',\r\n    'Ho boi! Dats what\\'s up. Refresh?',\r\n    'Wiener gogeener shliener man! Refresh tiiiime.'\r\n  ];\r\n  return winMessages[randomNum];\r\n};","import React, { ReactElement } from 'react';\r\nimport * as THREE from 'three';\r\nimport { WEBGL } from '../../utils/webGLUtils/webGLUtils';\r\nimport { setupSquareGameLights, squareGameFunctionality } from '../../utils/squareGameUtils/squareGameUtils';\r\nimport './SquareGameContainer.css';\r\n\r\nexport const SquareGameContainer = (): ReactElement => {\r\n\r\n    const [quality, setQuality] = React.useState<number>(1); // 2.5 = low quality | 1 = highest quality\r\n\r\n    const toggleQuality = () => {\r\n        if (quality === 2.5) {\r\n            setQuality(1);\r\n        } else {\r\n            setQuality(2.5);\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        // This runs twice when running this locally, but only once when you build or deploy the code.\r\n        if ( WEBGL.isWebGLAvailable() ) {\r\n            \r\n            // Renderer setup\r\n            let renderer = new THREE.WebGLRenderer({ antialias: false, alpha: true }); // needs 'alpha' to be true for CSS gradient background\r\n            renderer.setSize( window.innerWidth, window.innerHeight);\r\n            renderer.setPixelRatio( window.devicePixelRatio/quality );\r\n            renderer.autoClear = false;\r\n            renderer.clear();\r\n\r\n            let isMobileAspectRatio = false;\r\n            console.log('window height: ', window.innerHeight)\r\n            console.log('window width: ', window.innerWidth)\r\n            if(window.innerHeight > window.innerWidth) {\r\n                isMobileAspectRatio = true;\r\n            }\r\n\r\n            renderer.domElement.id = 'dom';\r\n            renderer.domElement.className = 'position-fixed';\r\n            if (document.body.contains( document.getElementById( 'dom' ) ) === false) {\r\n                document.body.append( renderer.domElement );\r\n            } else {\r\n                const dom = document.getElementById('dom');\r\n                if(dom !== null) {\r\n                    document.body.removeChild( dom );\r\n                    document.body.append( renderer.domElement );\r\n                } \r\n            };\r\n\r\n            // Camera / Scene setup\r\n            let scene = new THREE.Scene();\r\n            let camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 1, 3000);\r\n            camera.position.set(0, 0, 0);\r\n            //camera.setFocalLength(35);\r\n\r\n            setupSquareGameLights( scene );\r\n\r\n            squareGameFunctionality( scene, renderer, camera, quality, isMobileAspectRatio );\r\n            \r\n        } else {\r\n            const warning = WEBGL.getWebGLErrorMessage();\r\n            document.body.appendChild( warning );\r\n        }\r\n    }, [quality]);\r\n\r\n    return (\r\n        <div data-testid='canvas' id='canvas'>\r\n            <button id='qualityBtn' onClick={toggleQuality}>\r\n                QUALITY\r\n            </button>\r\n            <div id='timerContainer'>\r\n                <div id='timerCircleAni'>\r\n                    <div id='timerBigLineAni'></div>\r\n                    <div id='timerMiddleDot'></div>\r\n                    <div id='timerSmallLineAni'></div>\r\n                </div>\r\n                <div id='timerDiv'></div>\r\n            </div>\r\n            <div id='instructionsContainer'>\r\n                <div id='instructionsText'>Avoid the Squares!</div>\r\n            </div>\r\n            <div id='winLoseText'></div>\r\n        </div>\r\n    )\r\n};","import React from 'react';\nimport './App.css';\nimport { SquareGameContainer } from './components/SquareGameContainer/SquareGameContainer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SquareGameContainer key={0} />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}