{"version":3,"sources":["utils/webGLUtils/webGLUtils.js","utils/squareGameUtils/squareGameUtils.ts","components/SquareGameContainer/SquareGameContainer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["WEBGL","canvas","document","createElement","window","WebGLRenderingContext","getContext","e","WebGL2RenderingContext","this","getErrorMessage","version","contexts","1","2","message","element","id","style","fontFamily","fontSize","fontWeight","textAlign","background","color","padding","width","margin","replace","innerHTML","randomNumberRange","min","max","Math","random","randomLoseMessage","floor","randomWinMessage","SquareGameContainer","_React$useState","React","useState","_React$useState2","Object","slicedToArray","quality","setQuality","_React$useState3","_React$useState4","isMobileAspectRatio","setIsMobileAspectRatio","useEffect","isWebGLAvailable","renderer","THREE","antialias","alpha","setSize","innerWidth","innerHeight","setPixelRatio","devicePixelRatio","autoClear","clear","domElement","className","body","contains","getElementById","append","dom","removeChild","scene","camera","position","set","dirLight","rotateX","add","hemiLight","setupSquareGameLights","isHighQuality","levelWin","levelLose","mouse","x","y","addEventListener","aspect","updateProjectionMatrix","composer","EffectComposer","basicRenderPass","RenderPass","addPass","bokehPass","BokehPass","focus","aperture","maxblur","bloomPass","UnrealBloomPass","outputPass","OutputPass","playerAcceleration","playerGeo","playerMat","emissive","specular","shininess","reflectivity","refractionRatio","playerMesh","geometry","computeBoundingSphere","playerBoundingSphere","console","log","z","event","preventDefault","touches","clientX","clientY","vector","unproject","dir","sub","normalize","distance","pos","clone","multiplyScalar","copy","winLoseLevelDiv","bigHand","littleHand","clock","delta","time","timeText","concat","toString","timerDiv","instructionsDiv","moonMat","opacity","moonGeo","moonMesh","scale","hillMat","hillGeo","treeMat","treeMeshArray","treeGeo","i","tempTreeMesh","push","generateTrees","hill1Mesh","hill2Mesh","hill3Mesh","hill4Mesh","apply","toConsumableArray","enemyDirection","enemyGeo","computeBoundingBox","enemyMat","enemyMesh","enemyBoundingBox","Vector3","setFromObject","enemyMatTween","Tween","material","to","repeat","Infinity","yoyo","easing","Easing","Quadratic","InOut","start","requestAnimationFrame","animate","aniTime","boundingSphere","intersectsSphere","animationPlayState","classList","getDelta","remove","sign","rotateZ","boundingBox","applyMatrix4","matrixWorld","update","render","squareGameFunctionality","warning","getWebGLErrorMessage","appendChild","react_default","a","data-testid","onClick","App","SquareGameContainer_SquareGameContainer_SquareGameContainer","key","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","StrictMode","src_App"],"mappings":"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","file":"static/js/main.a0f5f96e.chunk.js","sourcesContent":["// Not my code, came from https://github.com/mrdoob/three.js/blob/master/examples/jsm/WebGL.js\r\n\r\nclass WEBGL {\r\n\r\n\tstatic isWebGLAvailable() {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tconst canvas = document.createElement( 'canvas' );\r\n\t\t\treturn !! ( window.WebGLRenderingContext && ( canvas.getContext( 'webgl' ) || canvas.getContext( 'experimental-webgl' ) ) );\r\n\r\n\t\t} catch ( e ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tstatic isWebGL2Available() {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tconst canvas = document.createElement( 'canvas' );\r\n\t\t\treturn !! ( window.WebGL2RenderingContext && canvas.getContext( 'webgl2' ) );\r\n\r\n\t\t} catch ( e ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tstatic getWebGLErrorMessage() {\r\n\r\n\t\treturn this.getErrorMessage( 1 );\r\n\r\n\t}\r\n\r\n\tstatic getWebGL2ErrorMessage() {\r\n\r\n\t\treturn this.getErrorMessage( 2 );\r\n\r\n\t}\r\n\r\n\tstatic getErrorMessage( version ) {\r\n\r\n\t\tconst names = {\r\n\t\t\t1: 'WebGL',\r\n\t\t\t2: 'WebGL 2'\r\n\t\t};\r\n\r\n\t\tconst contexts = {\r\n\t\t\t1: window.WebGLRenderingContext,\r\n\t\t\t2: window.WebGL2RenderingContext\r\n\t\t};\r\n\r\n\t\tlet message = 'Your $0 does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000\">$1</a>';\r\n\r\n\t\tconst element = document.createElement( 'div' );\r\n\t\telement.id = 'webglmessage';\r\n\t\telement.style.fontFamily = 'monospace';\r\n\t\telement.style.fontSize = '13px';\r\n\t\telement.style.fontWeight = 'normal';\r\n\t\telement.style.textAlign = 'center';\r\n\t\telement.style.background = '#fff';\r\n\t\telement.style.color = '#000';\r\n\t\telement.style.padding = '1.5em';\r\n\t\telement.style.width = '400px';\r\n\t\telement.style.margin = '5em auto 0';\r\n\r\n\t\tif ( contexts[ version ] ) {\r\n\r\n\t\t\tmessage = message.replace( '$0', 'graphics card' );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmessage = message.replace( '$0', 'browser' );\r\n\r\n\t\t}\r\n\r\n\t\tmessage = message.replace( '$1', names[ version ] );\r\n\r\n\t\telement.innerHTML = message;\r\n\r\n\t\treturn element;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { WEBGL };","import * as THREE from 'three';\r\nimport { Vector3 } from 'three';\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\r\nimport { BokehPass } from 'three/examples/jsm/postprocessing/BokehPass';\r\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass';\r\nimport { OutputPass } from 'three/examples/jsm/postprocessing/OutputPass';\r\nimport { Tween, Easing } from '@tweenjs/tween.js';\r\n\r\nexport const setupSquareGameLights = ( scene: THREE.Scene ) => {\r\n    let dirLight = new THREE.DirectionalLight('rgb(255,150,80)', 1);\r\n    dirLight.position.set( 500, 300, -500 );\r\n    dirLight.rotateX(50);\r\n    scene.add( dirLight );\r\n\r\n    // Directional light helper (temp af)\r\n    const helpDirLight = new THREE.DirectionalLightHelper( dirLight );\r\n    //scene.add( helpDirLight );\r\n\r\n    let hemiLight = new THREE.HemisphereLight(0xffffff, 0x232323, 1);\r\n    scene.add( hemiLight );\r\n};\r\n\r\nexport const squareGameFunctionality = (\r\n    scene: THREE.Scene,\r\n    renderer: any,\r\n    camera: THREE.PerspectiveCamera,\r\n    quality: any,\r\n    isMobileAspectRatio: boolean) => {\r\n\r\n      const isHighQuality = quality === 1;\r\n\r\n      let levelWin = false;\r\n      let levelLose = false;\r\n\r\n      let mouse = {x: 0, y: 0};\r\n\r\n      // Window Resizing\r\n      window.addEventListener( 'resize', onWindowResize );\r\n      function onWindowResize() {\r\n\r\n\t\t\t\tcamera.aspect = window.innerWidth / window.innerHeight;\r\n\t\t\t\tcamera.updateProjectionMatrix();\r\n\r\n\t\t\t\trenderer.setSize( window.innerWidth, window.innerHeight );\r\n\t\t\t};\r\n\r\n      // Skybox\r\n      scene.background = new THREE.Color('rgb(18,54,89)');\r\n      // TODO: ADD TEXTURED SKYBOX FOR HIGH QUALITY\r\n      // const r = 'textures/cube/Bridge2/';\r\n      // const urls = [ r + 'posx.jpg', r + 'negx.jpg',\r\n      //             r + 'posy.jpg', r + 'negy.jpg',\r\n      //             r + 'posz.jpg', r + 'negz.jpg' ];\r\n      // const textureCube = new THREE.CubeTextureLoader().load( urls );\r\n\r\n      // scene.background = textureCube;\r\n\r\n      // Depth of Field and Bloom effect setup\r\n      const composer = new EffectComposer( renderer );\r\n      const basicRenderPass = new RenderPass( scene, camera );\r\n      composer.addPass( basicRenderPass );\r\n      if (quality === 1) {\r\n        const bokehPass = new BokehPass( scene, camera, { focus: 50, aperture: 0.005, maxblur: 0.02 });\r\n        composer.addPass(bokehPass);\r\n        const bloomPass = new UnrealBloomPass( new THREE.Vector2(window.innerWidth, window.innerHeight), 0.7, 0.09, 0.09);\r\n        composer.addPass(bloomPass);\r\n      }\r\n      const outputPass = new OutputPass();\r\n      composer.addPass( outputPass );\r\n\r\n      // Player sphere creation\r\n      let playerAcceleration = 0;\r\n      const playerGeo = new THREE.SphereGeometry(isMobileAspectRatio ? 4 : 6, isHighQuality ? 16 : 8, isHighQuality ? 36 : 18);\r\n      const playerMat = new THREE.MeshPhongMaterial({\r\n          color: 'rgb(23,195,230)',\r\n          emissive: 'rgb(0,0,0)',\r\n          specular: 'rgb(255,220,0)',\r\n          shininess: 30,\r\n          reflectivity: 1,\r\n          refractionRatio: 0.98\r\n      });\r\n      let playerMesh = new THREE.Mesh( playerGeo, playerMat );\r\n      playerMesh.geometry.computeBoundingSphere();\r\n      playerMesh.position.set(0,0,-50);\r\n      let playerBoundingSphere = new THREE.Sphere(playerMesh.position, isMobileAspectRatio ? 4 : 6);\r\n      scene.add( playerMesh );\r\n      console.log('camera pos z: ', camera.position.z);\r\n      console.log('player pos z', playerMesh.position.z);\r\n      console.log('distance z: ', camera.position.z - playerMesh.position.z);\r\n\r\n      const onMouseMove = ( event: MouseEvent ) => {\r\n          event.preventDefault();\r\n          if(!levelLose && !levelWin) {\r\n            mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\r\n            mouse.y = - (event.clientY / window.innerHeight) * 2 + 1;\r\n        \r\n            // Make the sphere follow the mouse\r\n            let vector = new THREE.Vector3(mouse.x, mouse.y, 0.5);\r\n            vector.unproject( camera );\r\n            let dir = vector.sub( camera.position ).normalize();\r\n            let distance = - (camera.position.z + 50) / dir.z;\r\n            let pos = camera.position.clone().add( dir.multiplyScalar( distance ) );\r\n            playerMesh.position.copy(pos);\r\n          }\r\n      };\r\n\r\n      const onTouchMove = ( event: TouchEvent ) => {\r\n        event.preventDefault();\r\n        if(!levelLose && !levelWin) {\r\n          mouse.x = (event.touches[0].clientX / window.innerWidth) * 2 - 1;\r\n          mouse.y = - (event.touches[0].clientY / window.innerHeight) * 2 + 1;\r\n      \r\n          // Make the sphere follow the mouse\r\n          let vector = new THREE.Vector3(mouse.x, mouse.y, 0.5);\r\n          vector.unproject( camera );\r\n          let dir = vector.sub( camera.position ).normalize();\r\n          let distance = - (camera.position.z + 50) / dir.z;\r\n          let pos = camera.position.clone().add( dir.multiplyScalar( distance ) );\r\n          playerMesh.position.copy(pos);\r\n        }\r\n    };\r\n\r\n      // When the mouse moves, call the given function\r\n      if (isMobileAspectRatio) {\r\n        document.addEventListener('touchmove', onTouchMove, false);\r\n      } else {\r\n        document.addEventListener('mousemove', onMouseMove, false);\r\n      }\r\n\r\n      // Level setup\r\n      let level = 1;\r\n      const LEVEL_1_TIME = 50;\r\n\r\n      const winLoseLevelDiv = document.getElementById('winLoseText');\r\n\r\n      // Timer UI setup\r\n      const bigHand = document.getElementById('timerBigLineAni');\r\n      const littleHand = document.getElementById('timerSmallLineAni');\r\n      let clock = new THREE.Clock();\r\n      let speed = 1;\r\n      let delta = 0;\r\n      let time = LEVEL_1_TIME;\r\n      let timeText: string = `Left: ${LEVEL_1_TIME.toString()}`;\r\n\r\n      const timerDiv = document.getElementById('timerDiv');\r\n      const instructionsDiv = document.getElementById('instructionsContainer');\r\n      \r\n      // BG Objects setup\r\n      const moonMat = new THREE.MeshPhongMaterial({\r\n        color: 'rgb(175,130,85)',\r\n        emissive: 'rgb(175,130,85)',\r\n        specular: 'rgb(50,50,50)',\r\n        shininess: 0,\r\n        reflectivity: 0,\r\n        refractionRatio: 0\r\n      });\r\n      moonMat.opacity = 0.1;\r\n      const moonGeo = new THREE.SphereGeometry(400, isHighQuality ? 30 : 15, isHighQuality ? 30 : 15);\r\n      const moonMesh = new THREE.Mesh( moonGeo, moonMat );\r\n      moonMesh.position.set(500, 300, -400);\r\n      moonMesh.scale.z = 0.1;\r\n      const hillMat = new THREE.MeshPhongMaterial({\r\n        color: 'rgb(15,59,102)',\r\n        emissive: 'rgb(0,0,0)',\r\n        specular: 'rgb(255,230,50)',\r\n        shininess: 2,\r\n        reflectivity: 0.1,\r\n        refractionRatio: 0.1\r\n      });\r\n      const hillGeo = new THREE.SphereGeometry(175, isHighQuality ? 20 : 10, isHighQuality ? 20 : 10);\r\n      const NUM_OF_TREES = 35;\r\n      const treeMat = new THREE.MeshPhongMaterial({\r\n        color: 'rgb(23,69,115)',\r\n        emissive: 'rgb(0,0,0)',\r\n        specular: 'rgb(200,180,50)',\r\n        shininess: 1,\r\n        reflectivity: 0.1,\r\n        refractionRatio: 0.1\r\n      });\r\n      let treeMeshArray: THREE.Mesh[] = [];\r\n      const treeGeo = new THREE.ConeGeometry(50,150, isHighQuality ? 12 : 6, isHighQuality ? 6 : 3);\r\n      const generateTrees = (): THREE.Mesh[] => {\r\n        for(let i = 0; i < NUM_OF_TREES; i++) {\r\n          const tempTreeMesh = new THREE.Mesh( treeGeo, treeMat );\r\n          tempTreeMesh.position.set(-2000+(i*randomNumberRange(70,140)),-150+(Math.random()*30),-200);\r\n          treeMeshArray.push(tempTreeMesh);\r\n        }\r\n        return treeMeshArray;\r\n      };\r\n      treeMeshArray = generateTrees();\r\n      let hill1Mesh = new THREE.Mesh( hillGeo, hillMat );\r\n      hill1Mesh.position.set(-300,-175,-300);\r\n      hill1Mesh.scale.set(1.2,1.5,0.4);\r\n      let hill2Mesh = new THREE.Mesh( hillGeo, hillMat );\r\n      hill2Mesh.position.set(0,-250,-300);\r\n      hill2Mesh.scale.set(1.2,1.5,0.4);\r\n      let hill3Mesh = new THREE.Mesh( hillGeo, hillMat );\r\n      hill3Mesh.position.set(600,-175,-300);\r\n      hill3Mesh.scale.set(1.2,1.5,0.4);\r\n      let hill4Mesh = new THREE.Mesh( hillGeo, hillMat );\r\n      hill4Mesh.position.set(900,-250,-300);\r\n      hill4Mesh.scale.set(1.2,1.5,0.4);\r\n      \r\n\r\n      scene.add( hill1Mesh, hill2Mesh, hill3Mesh, hill4Mesh,\r\n        ...treeMeshArray, moonMesh );\r\n\r\n      // Enemy AI Setup\r\n      let enemyDirection = 1;\r\n      let enemySpeed = 0.2;\r\n      const enemyGeo = new THREE.BoxGeometry(9,9,9,1,1,1);\r\n      enemyGeo.computeBoundingBox();\r\n      const enemyMat = new THREE.MeshPhongMaterial({\r\n        color: 'rgb(230,132,34)'\r\n      })\r\n      const enemyMesh = new THREE.Mesh( enemyGeo, enemyMat );\r\n      enemyMesh.position.set(2350, 0, -50);\r\n      let enemyBoundingBox = new THREE.Box3(new Vector3, new Vector3);\r\n      enemyBoundingBox.setFromObject(enemyMesh);\r\n      scene.add( enemyMesh );\r\n\r\n      const enemyMatTween = new Tween(enemyMesh.material.color)\r\n          .to(new THREE.Color('rgb(255,210,200)'), 100)\r\n          .repeat(Infinity)\r\n          .yoyo(true)\r\n          .easing(Easing.Quadratic.InOut)\r\n          .start();\r\n\r\n      const animate = (aniTime: any) => {\r\n\r\n        if(playerMesh.geometry.boundingSphere && !levelLose) {\r\n          //console.log('bounding box?: ', !!enemyMesh.geometry.boundingBox);\r\n          //console.log(enemyBoundingBox.distanceToPoint(playerBoundingSphere.center));\r\n          //console.log(!!enemyBoundingBox.intersectsSphere(playerBoundingSphere));\r\n        }\r\n        \r\n        if(!levelLose && !levelWin) {\r\n\r\n          // Collision detection for player and enemy\r\n          if(winLoseLevelDiv && bigHand && littleHand && timerDiv && !levelWin && playerMesh.geometry.boundingSphere &&\r\n            enemyBoundingBox.intersectsSphere(playerBoundingSphere)) {\r\n            levelLose = true;\r\n            console.log('COLLISION');\r\n            bigHand.style.animationPlayState = 'paused';\r\n            littleHand.style.animationPlayState = 'paused';\r\n            timerDiv.classList.add('blink');\r\n            winLoseLevelDiv.classList.add('slowUIEnter');\r\n            winLoseLevelDiv.innerHTML = randomLoseMessage();\r\n          }\r\n\r\n          // Setup timer\r\n          delta = clock.getDelta();\r\n          time -= (speed * delta);\r\n          timeText = `Left: ${Math.floor(time)}`;\r\n          if (timerDiv) {\r\n            timerDiv.innerHTML = timeText;\r\n          };\r\n\r\n          // Removing the instructions UI\r\n          if (time <= 45 && instructionsDiv && !instructionsDiv.classList.contains('exitDom')) {\r\n            instructionsDiv.classList.add('exitDom');\r\n          }\r\n          if (time <= 44 && instructionsDiv) {\r\n            instructionsDiv.remove();\r\n          }\r\n\r\n          // BG movement\r\n          hill1Mesh.position.x -= 0.04;\r\n          hill2Mesh.position.x -= 0.04;\r\n          hill3Mesh.position.x -= 0.04;\r\n          hill4Mesh.position.x -= 0.04;\r\n\r\n          for(let i = 0; i < NUM_OF_TREES; i++) {\r\n            treeMeshArray[i].position.x -= 6;\r\n            if(treeMeshArray[i].position.x <= -2000) {\r\n              treeMeshArray[i].position.x = 2000\r\n            }\r\n          };\r\n\r\n          // Winning trigger logic\r\n          if(winLoseLevelDiv && bigHand && littleHand && Math.floor(time) <= 0) {\r\n            levelWin = true;\r\n            bigHand.style.animationPlayState = 'paused';\r\n            littleHand.style.animationPlayState = 'paused';\r\n            winLoseLevelDiv.classList.add('slowUIEnter');\r\n            winLoseLevelDiv.classList.add('winningAnimation');\r\n            winLoseLevelDiv.innerHTML = randomWinMessage();\r\n          }\r\n        }\r\n\r\n          // Enemy movement \r\n          enemyDirection = Math.sign(playerMesh.position.y);\r\n          enemyMesh.rotateZ(0.05);\r\n          enemyMesh.position.x -= isMobileAspectRatio ? 4.5 : 3;\r\n          enemyMesh.position.y += enemyDirection*enemySpeed;\r\n          if(enemyMesh.position.y === playerMesh.position.y ||\r\n            (enemyDirection >= 0 ? enemyMesh.position.y > playerMesh.position.y :\r\n              enemyMesh.position.y < playerMesh.position.y)) {\r\n            enemyMesh.position.y = playerMesh.position.y;\r\n          }\r\n          if(enemyMesh.position.x <= -250) {\r\n            enemyMesh.position.x  = randomNumberRange(150,750);\r\n          }\r\n          // Have the enemy bounding box follow the enemy's position\r\n          if (enemyMesh.geometry.boundingBox) {\r\n            enemyBoundingBox.copy( enemyMesh.geometry.boundingBox ).applyMatrix4( enemyMesh.matrixWorld );\r\n          }\r\n\r\n          // Enemy material animation\r\n          enemyMatTween.update(aniTime);\r\n\r\n          if (levelLose) {\r\n            playerAcceleration += 0.1;\r\n            playerMesh.position.y -= 0.1+playerAcceleration;\r\n\r\n            // BG movement\r\n            hill1Mesh.position.x -= 0.008;\r\n            hill2Mesh.position.x -= 0.008;\r\n            hill3Mesh.position.x -= 0.008;\r\n            hill4Mesh.position.x -= 0.008;\r\n\r\n            for(let i = 0; i < NUM_OF_TREES; i++) {\r\n              treeMeshArray[i].position.x -= 0.2;\r\n              if(treeMeshArray[i].position.x <= -2000) {\r\n                treeMeshArray[i].position.x = 2000\r\n              }\r\n            };\r\n          } else if (levelWin) {\r\n            playerAcceleration += 0.1;\r\n            playerMesh.position.x += 0.1+playerAcceleration;\r\n\r\n            // BG movement\r\n            hill1Mesh.position.x -= 0.008;\r\n            hill2Mesh.position.x -= 0.008;\r\n            hill3Mesh.position.x -= 0.008;\r\n            hill4Mesh.position.x -= 0.008;\r\n\r\n            for(let i = 0; i < NUM_OF_TREES; i++) {\r\n              treeMeshArray[i].position.x -= 0.2;\r\n              if(treeMeshArray[i].position.x <= -2000) {\r\n                treeMeshArray[i].position.x = 2000\r\n              }\r\n            };\r\n          }\r\n\r\n          requestAnimationFrame(animate);\r\n\r\n          composer.render();\r\n      };\r\n\r\n      requestAnimationFrame(animate);\r\n};\r\n\r\nconst randomNumberRange = (min: number, max: number) => { \r\n  return Math.random() * (max - min) + min;\r\n};\r\n\r\nconst randomLoseMessage = (): string => {\r\n  const randomNum = Math.floor(randomNumberRange(0,4));\r\n  const loseMessages = [\r\n    'Yikes. I mean you can always refresh to try again.',\r\n    'Uh ooooh. Refresh time?',\r\n    'That\\'s a bummer my guy. Refresh?',\r\n    'Yeah, you better refresh dude. That suckssss'\r\n  ];\r\n  return loseMessages[randomNum];\r\n};\r\n\r\nconst randomWinMessage = (): string => {\r\n  const randomNum = Math.floor(randomNumberRange(0,4));\r\n  const winMessages = [\r\n    'You fucking won dude! Refresh to give it another go.',\r\n    'Wowzers brah! I\\'m feeling a refresh comming on.',\r\n    'Ho boi! Dats what\\'s up. Refresh?',\r\n    'Wiener gogeener shliener man! Refresh tiiiime.'\r\n  ];\r\n  return winMessages[randomNum];\r\n};","import React, { ReactElement } from 'react';\r\nimport * as THREE from 'three';\r\nimport { WEBGL } from '../../utils/webGLUtils/webGLUtils';\r\nimport { setupSquareGameLights, squareGameFunctionality } from '../../utils/squareGameUtils/squareGameUtils';\r\nimport './SquareGameContainer.css';\r\n\r\nexport const SquareGameContainer = (): ReactElement => {\r\n\r\n    const [quality, setQuality] = React.useState<number>(1); // 2.5 = low quality | 1 = highest quality\r\n    const [isMobileAspectRatio, setIsMobileAspectRatio] = React.useState(false);\r\n\r\n    const toggleQuality = () => {\r\n        if (quality === 2.5) {\r\n            setQuality(1);\r\n        } else {\r\n            setQuality(2.5);\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        // This runs twice when running this locally, but only once when you build or deploy the code.\r\n        if ( WEBGL.isWebGLAvailable() ) {\r\n            \r\n            // Renderer setup\r\n            let renderer = new THREE.WebGLRenderer({ antialias: false, alpha: true }); // needs 'alpha' to be true for CSS gradient background\r\n            renderer.setSize( window.innerWidth, window.innerHeight);\r\n            renderer.setPixelRatio( window.devicePixelRatio/quality );\r\n            renderer.autoClear = false;\r\n            renderer.clear();\r\n\r\n            if(window.innerHeight > window.innerWidth && !isMobileAspectRatio) {\r\n                setIsMobileAspectRatio(true);\r\n            } else if (window.innerHeight <= window.innerWidth && isMobileAspectRatio) {\r\n                setIsMobileAspectRatio(false);\r\n            }\r\n\r\n            renderer.domElement.id = 'dom';\r\n            renderer.domElement.className = 'position-fixed';\r\n            if (document.body.contains( document.getElementById( 'dom' ) ) === false) {\r\n                document.body.append( renderer.domElement );\r\n            } else {\r\n                const dom = document.getElementById('dom');\r\n                if(dom !== null) {\r\n                    document.body.removeChild( dom );\r\n                    document.body.append( renderer.domElement );\r\n                } \r\n            };\r\n\r\n            // Camera / Scene setup\r\n            let scene = new THREE.Scene();\r\n            let camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 1, 3000);\r\n            camera.position.set(0, 0, 0);\r\n            //camera.setFocalLength(35);\r\n\r\n            setupSquareGameLights( scene );\r\n\r\n            squareGameFunctionality( scene, renderer, camera, quality, isMobileAspectRatio );\r\n            \r\n        } else {\r\n            const warning = WEBGL.getWebGLErrorMessage();\r\n            document.body.appendChild( warning );\r\n        }\r\n    }, [quality]);\r\n\r\n    return (\r\n        <div data-testid='canvas' id='canvas'>\r\n            <button id='qualityBtn' onClick={toggleQuality}>\r\n                QUALITY\r\n            </button>\r\n            <div id='timerContainer'>\r\n                <div id='timerCircleAni'>\r\n                    <div id='timerBigLineAni'></div>\r\n                    <div id='timerMiddleDot'></div>\r\n                    <div id='timerSmallLineAni'></div>\r\n                </div>\r\n                <div id='timerDiv'></div>\r\n            </div>\r\n            <div id='instructionsContainer'>\r\n                <div id='instructionsText'>Avoid the Squares!</div>\r\n            </div>\r\n            <div id='winLoseText'></div>\r\n        </div>\r\n    )\r\n};","import React from 'react';\nimport './App.css';\nimport { SquareGameContainer } from './components/SquareGameContainer/SquareGameContainer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SquareGameContainer key={0} />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}